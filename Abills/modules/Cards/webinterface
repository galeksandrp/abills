#!/usr/bin/perl



require "Cards.pm";
Cards->import();
my $Cards = Cards->new($db, $admin, $conf);

use Payments;
use Tariffs;
my $tariffs = Tariffs->new($db, \%conf, $admin);
my $payments = Payments->new($db, $admin, \%conf);

my @status = ('ENABLE', 'DISABLE', 'USED');



#**********************************************************
#
#**********************************************************
sub cards_bruteforce () {
  
  
  if ($FORM{del} &&  $FORM{is_js_confirmed}) {
	  $Cards->bruteforce_del({ UID => $FORM{del} });
    if (! $Cards->{errno}) {
  	  $html->message('info', $_DELETED, "$_DELETED ");
     }
   }
  elsif($FORM{UID}) {

    $LIST_PARAMS{UID}=$FORM{UID};
    my $list = $Cards->bruteforce_list({ %LIST_PARAMS });
    my $table = $html->table( { width      => '100%',
                              title      => ["$_USER", "PIN", "$_DATE" ],
                              cols_align => ['left', 'left', 'right'],
                              qs         => $pages_qs,
                              pages      => $Cards->{TOTAL}
                            });

    foreach my $line (@$list) {
 	 	  $table->addrow($html->button($line->[0], "index=15&UID=$line->[4]"), 
 		      $line->[1], 
  		    $line->[2]
  		  );
     }

	 print $table->show();	
 	 $table = $html->table( { width => '100%',
                         cols_align => ['right', 'right'],
                         rows => [ [ "$_TOTAL:", "<b>$Cards->{TOTAL}</b>" ] ]
                        } );
   print $table->show();	

   return 0;
  }
 
  my $list = $Cards->bruteforce_list({ %LIST_PARAMS });
  my $table = $html->table( { width      => '100%',
                              title      => ["$_USER", "$PERIODS[0]", "$_TOTAL", "$_DATE", '-', '-'],
                              cols_align => ['left', 'right', 'right', 'right', 'center', 'center' ],
                              qs         => $pages_qs,
                              pages      => $Cards->{TOTAL}
                            });

  foreach my $line (@$list) {
 		$table->addrow($html->button($line->[0], "index=15&UID=$line->[4]"), 
 		      $line->[1], 
  		    $line->[2],
  		    $line->[3],
  		    $html->button("$_SHOW", "index=$index&UID=$line->[4]"), 
  		    $html->button($_DEL, "index=$index$pages_qs&del=$line->[4]", { MESSAGE => "$_DEL [$line->[0]] ?" })
  		  );
   }

	print $table->show();
	
  $table = $html->table( { width => '100%',
                         cols_align => ['right', 'right'],
                         rows => [ [ "$_TOTAL:", "<b>$Cards->{TOTAL}</b>" ] ]
                        } );
  print $table->show();	

}


#**********************************************************
#
#**********************************************************
sub cards_payments () {
  
  
  if ($FORM{add}) {
    if (! $FORM{SUM} || $FORM{SUM} == 0 ) {
      $html->message('err', $_ERROR, "$_NO_SUM");
     }
    else {
      my $export = '';
    	my $begin = $FORM{BEGIN} || 0;
  	  my $count = $FORM{COUNT} || 0;
  	
  	  for(my $i=$begin; $i<=$begin+$count; $i++) {
#        REPLAY:
          my $pin = mk_unique_value($FORM{PASSWD_LENGTH}, { SYMBOLS => $FORM{PASSWD_SYMBOLS} || undef });
  	 	    my $serial = sprintf("%s%.10d", $FORM{SERIAL}, $i);
          $Cards->cards_payments_add({ SERIAL  => "$FORM{SERIAL}",
        	                          NUMBER  => "$i",
        	                          PIN     => "$pin",
        	                          SUM     => "$FORM{SUM}",
        	                          STATUS  => 0  });

          if ($Cards->{errno}) {
       	    $html->message('err', $_ERROR, "[$Cards->{errno}] $err_strs{$Cards->{errno}}");
       	    return 0;
           }
       $export .= ($FORM{EXPORT_XML}) ? "<ID>$serial</ID><PIN>$pin</PIN><SUM>$FORM{SUM}</SUM>\n" : "$serial\t$pin\t$FORM{SUM}\n";
  	   }
   	  print "<textarea cols='70' rows='30'>$export</textarea>\n";
    }
 }
elsif ($FORM{del}  && $FORM{is_js_confirmed} ) {
  $Cards->cards_payments_del({ SERIA => $FORM{SERIA}, NUMBER => $FORM{ID}  });
  if (! $Cards->{errno}) {
  	$html->message('info', $_DELETED, "$_SERIAL: $FORM{SERIA} ");
   }
}

  $Cards->defaults();
	$html->tpl_show(_include('cards_payments', 'Cards'), $Cards);
	

 my $table;

if (defined($FORM{SERIA})) {
  $pages_qs.="&SERIA=$FORM{SERIA}";

  my $list = $Cards->cards_payments_list({ %LIST_PARAMS, SERIA => $FORM{SERIA} });
  $table = $html->table( { width      => '100%',
                           caption    => "$_SERIAL: $FORM{SERIA}",
                           title      => ["$_SERIAL", "$_NUM", "$_SUM", "$_STATUS", "$_DATE", "$_ADMINS", '-'],
                           cols_align => ['right', 'right','right','right', 'right', 'left', 'center'],
                           qs         => $pages_qs,
                           pages      => $Cards->{TOTAL}
                         });


  foreach $line (@$list) {
   	$table->addrow($line->[0], 
  	    $line->[1],
  		  $line->[2],
        $status[$line->[3]],
  		  $line->[4],
  		  $line->[5],
  		  $html->button($_DEL, "index=$index&del=y&SERIA=$line->[0]&ID=$line->[1]", { MESSAGE => "$_DEL [$line->[0]] ?" })
  		);
    }
 }
else {
  my $list = $Cards->cards_payments_list({ %LIST_PARAMS });
	$table = $html->table( { width      => '100%',
                           caption    => "$_SERIAL",
                           
                                title      => ["$_SERIAL", "$_BEGIN", "$_SUM", "$_COUNT", 
                                   "$_ENABLE", "$_USED", "$_DATE", "$_ADMINS", '-', '-'],
                                cols_align => ['right', 'right','right','right', 'right', 'left', 'center'],
                                qs         => $pages_qs,
                                pages      => $Cards->{TOTAL}
                               });


  foreach $line (@$list) {
   	$table->addrow($line->[0], 
  	    $line->[1],
  		  $line->[2],
        $line->[3],
  		  $line->[4],
  		  $line->[5],
  		  $line->[6],
  		  $line->[7],
  		  $html->button($_SHOW, "index=$index$pages_qs&SERIA=$line->[0]"),
  		  $html->button($_DEL, "index=$index$pages_qs&del=y&SERIA=$line->[0]", { MESSAGE => "$_DEL [$line->[0]] ?" })
  		   );
    }

}
  print $table->show();	


  $table = $html->table( { width => '100%',
                         cols_align => ['right', 'right'],
                         rows => [ [ "$_TOTAL:", "<b>$Cards->{TOTAL}</b>" ] ]
                        } );
  print $table->show();	
}


#**********************************************************
#
#**********************************************************
sub cards_users () {
  if ($FORM{create}) {

    my $table = $html->table( { width      => '100%',
                                title      => ['ID', "$_LOGIN", "$_PASSWD", "$_GROUP", "$_STATUS", '-'],
                                cols_align => ['right', 'left', 'left', 'center'],
                                qs         => $pages_qs,
                                pages      => $Cards->{TOTAL}
                               });


  	my $begin = $FORM{BEGIN} || 0;
  	my $count = $FORM{COUNT} || 0;
  	
  	for(my $i=$begin; $i<=$begin+$count; $i++) {

  		$table->addrow("$i", $FORM{LOGIN_PREFIX}.($FORM{LOGIN_BEGIN}++), 
  		  mk_unique_value($FORM{PASSWD_LENGTH}, { SYMBOLS => $FORM{PASSWD_SYMBOLS} || undef }),
  		  '',
  		  $status[$line->[3]],
  		  $html->button($_DEL, "index=$index$pages_qs&del=$line->[0]", { MESSAGE => "$_DEL [$i] ?" })
  		  
  		);
  	 }
  	
  	print $table->show();
   }
  elsif($FORM{del}) {
  	
   }
  
  $Cards = $Cards->defaults();
	$Cards->{SEL_GROUPS} = sel_groups();
	$html->tpl_show(_include('cards_add', 'Cards'), $Cards);
	
}

#**********************************************************
#
#**********************************************************
sub cards_user_payment () {
	
	if ($FORM{PIN}) {
		my $BRUTE_LIMIT = ($conf{BRUTE_LIMIT}) ? $conf{BRUTE_LIMIT} : 5;
		
		my $brute = $Cards->bruteforce_list({ UID => $LIST_PARAMS{UID} });
		$Cards->cards_payments_info({ %FORM });
    
   if ($Cards->{error}) {
     $html->message('err', $_ERROR, "$ERR_SUPPORT");	
     return 0;
    }
	 elsif (int($brute->[0]->[1]) >= $BRUTE_LIMIT) {
     $html->message('err', $_ERROR, "_BRUTE_ATACK");	
     return 0;
 	 	}
	 elsif ($Cards->{TOTAL} < 1) {
	 	 $html->message('err', $_ERROR, "$_NOT_EXIST");
	 	 $Cards->bruteforce_add({ UID => $LIST_PARAMS{UID}, PIN => $FORM{PIN} });
	  }
	 elsif ($Cards->{STATUS} != 0) {
	   $html->message('err', $_ERROR, "$_CARD $_DISABLE");
	   return 0;
	  }
   
   $user->info($LIST_PARAMS{UID});
   $payments->add($user, { SUM     => $Cards->{SUM},
                           METHOD  => 2, 
                           EXT_ID  => "$Cards->{SERIAL}$Cards->{NUMBER}",
                           });  

   if (! $payments->{errno}) {
     $html->message('info', $_PAYMENTS, "$_ADDED $_SUM: $Cards->{SUM}");
     $Cards->cards_payments_change({ PIN => $FORM{PIN}, STATUS => 2, DATETIME => "$DATE $TIME" });	
     return 0;
    }
   
	 }
	
	$html->tpl_show(_include('cards_payment_add', 'Cards'), $Cards);
	
}




1

