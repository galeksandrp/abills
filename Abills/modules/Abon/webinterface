#!/usr/bin/perl
# Periodic payments web interface
#

use Abon;
use Fees;

my $Abon = Abon->new($db, $admin, \%conf);
my $fees = Fees->new($db, $admin, \%conf);
my @PERIODS = ($_DAY, $_MONTH, $_QUARTER, $_SIX_MONTH, $_YEAR);

#*******************************************************************
# Delete user from module
# abon_user_del()
#*******************************************************************
sub abon_user_del {
  my ($uid, $attr) = @_;

  $Abon->{UID} = $uid;
  $Abon->del({ UID => $uid });

  return 0;
}

#*******************************************************************
# Change user variant form
# abon_user()
#*******************************************************************
sub abon_user {
  my ($attr) = @_;

  my $message = '';
  if ($FORM{change} || $FORM{add}) {
    $FORM{QUICK} = 1;
    load_module('Docs', $html);

    $users->pi({ UID => $users->{UID} || $FORM{UID} || $LIST_PARAMS{UID} });
    my @new_arr  = ();
    my @ids_arr  = split(/, /, $FORM{IDS});
    my %ids_hash = ();
    my @add_arr  = ();
    my @del_arr  = ();


  if ($FORM{ACTIVATE}) {
 	  push @new_arr, $FORM{ACTIVATE};
  }
  else {
    foreach my $k (@ids_arr) {
      $ids_hash{$k} = 1;
    }

    my $list = $Abon->user_tariff_list($FORM{UID}, { COLS_NAME => 1 });

    foreach my $line (@$list) {
      if ($ids_hash{ $line->{id} } && $line->{date}) {
        #check changes
        
        my @compare = (
          'COMMENTS_:comments',
          'SERVICE_COUNT_:service_count',
          #'DATE_:date',
          'DISCOUNT_:discount',
          'CREATE_DOCS_:create_docs',
          'SEND_DOCS_:send_docs',
          'MANUAL_FEE_:manual_fee');
          
        foreach my $l (@compare) {
        	my ($input_value, $db_value)=split(/:/, $l);
        	if ($FORM{$input_value.$line->{id}} ne $line->{$db_value}) {
        		next if (! $FORM{$input_value.$line->{id}} && ! $line->{$db_value});
        		$Abon->user_tariff_change({ UID => $FORM{UID},
        			          TP_ID       => $line->{id},
        		 	          COMMENTS    => $FORM{'COMMENTS_'.$line->{id}}, 
  	                    DISCOUNT    => $FORM{'DISCOUNT_'.$line->{id}}, 
  	                    CREATE_DOCS => $FORM{'CREATE_DOCS_'.$line->{id}}, 
  	                    SEND_DOCS   => $FORM{'SEND_DOCS_'.$line->{id}}, 
  	                    SERVICE_COUNT=>$FORM{'SERVICE_COUNT_'.$line->{id}},
  	                    MANUAL_FEE  => $FORM{'MANUAL_FEE_'.$line->{id}},
  	                    CHANGE_INFO => 1
  	                    });
        		last;
        	}
        }  
        
        delete $ids_hash{ $line->{id} };
      }
      elsif ($line->{date}) {
        push @del_arr, $line->{id};
      }
    }

    @new_arr  = keys %ids_hash;
}

    my @docs_ids = ();
    
    if ($#new_arr > -1) {
      my $list = $Abon->tariff_list({ IDS => join(', ', @new_arr),
      	                              COLS_NAME => 1 });
      foreach my $line (@$list) {
        my ($Y, $M, $D) = split(/-/, $FORM{ 'DATE_' . $line->{tp_id} }, 3);
        my $seltime = POSIX::mktime(0, 0, 0, $D, ($M - 1), ($Y - 1900));

        if (($users->{CREDIT} + $users->{DEPOSIT}) > $line->{price} || $line->{payment_type} || time() < $seltime) {
          $Abon->{TP_INFO}->{PERIOD_ALIGNMENT} = $line->{period_alignment} || 0;
          $Abon->{TP_INFO}->{PRICE}        = $line->{price};
          $Abon->{TP_INFO}->{TP_ID}            = $line->{tp_id};
          $Abon->{TP_INFO}->{NAME}             = $line->{name};
          $Abon->{COMMENTS}                    = $FORM{ 'COMMENTS_' . $line->{tp_id} };
          $Abon->{TP_INFO}->{FEES_TYPE}        = $line->{fees_type} || 1;
          $Abon->{TP_INFO}->{CREATE_ACCOUNT}   = $line->{create_account};
          $ext_cmd                             = $line->{ext_cmd};
          $activate_notification               = $line->{activate_notification};
          $Abon->{TP_INFO}->{DISCOUNT}         = $line->{discount};

          if ($FORM{'SERVICE_COUNT_'. $Abon->{TP_INFO}->{TP_ID} }) {
            $Abon->{TP_INFO}->{PRICE}=$Abon->{TP_INFO}->{PRICE} * $FORM{'SERVICE_COUNT_'. $Abon->{TP_INFO}->{TP_ID} };
          }
          else {
          	$FORM{'SERVICE_COUNT_'. $Abon->{TP_INFO}->{TP_ID} }=1;
          }

          if ($FORM{ 'DATE_' . $Abon->{TP_INFO}->{TP_ID} } && $FORM{ 'DATE_' . $Abon->{TP_INFO}->{TP_ID} } ne '0000-00-00') {
            $FORM{ 'PERIOD_' . $Abon->{TP_INFO}->{TP_ID} } = $line->{period};
            push @add_arr, $line->{tp_id};
            next;
          }

          my %PARAMS = (
            DESCRIBE => "$_ABON: ($line->{tp_id}) " . (($FORM{ 'COMMENTS_' . $line->{tp_id} }) ? $FORM{ 'COMMENTS_' . $line->{tp_id} } : "$line->{name}"),
            METHOD => $Abon->{TP_INFO}->{FEES_TYPE}
          );

          if ($FORM{ 'DISCOUNT_' . $Abon->{TP_INFO}->{TP_ID} }) {
            $Abon->{TP_INFO}->{PRICE} = $Abon->{TP_INFO}->{PRICE} * ((100 - $FORM{ 'DISCOUNT_' . $Abon->{TP_INFO}->{TP_ID} }) / 100);
          }
          elsif ($Abon->{TP_INFO}->{DISCOUNT} && $users->{REDUCTION} > 0) {
            $Abon->{TP_INFO}->{PRICE} = $Abon->{TP_INFO}->{PRICE} * ((100 - $users->{REDUCTION}) / 100);
          }

          if (time() < $seltime) {

          }
          elsif ($line->{period} == 1 && $Abon->{TP_INFO}->{PERIOD_ALIGNMENT} == 1) {
            $Abon->{ACTIVATE} = $users->{ACTIVATE};
            $message .= abon_get_month_fee($Abon);
          }
          elsif ($FORM{ 'DISCOUNT_' . $Abon->{TP_INFO}->{TP_ID} } < 100) {
            $fees->take($users, $Abon->{TP_INFO}->{PRICE}, {%PARAMS});
            if ($fees->{errno}) {
              $html->message('err', "$_FEES : $_ERROR", "[$fees->{errno}] $fees->{errstr}");
            }
            else {
              $message .= "$_ABON: $Abon->{TP_INFO}->{PRICE} ($Abon->{TP_INFO}->{TP_ID})\n";
            }
          }

          if ($ext_cmd) {
            my $cmd = $ext_cmd;
            $cmd .= " ACTION=ALERT UID=$user{UID} TP_ID=$tp_id COMMENTS=\"$comment\" SUM=$sum";
            $ret = system($cmd);
          }

          if ($Abon->{TP_INFO}->{CREATE_ACCOUNT} && $FORM{ 'CREATE_DOCS_' . $Abon->{TP_INFO}->{TP_ID} }) {
            $FORM{'SUM_'.($#docs_ids+2)}    = $Abon->{TP_INFO}->{PRICE} / $FORM{'SERVICE_COUNT_'. $Abon->{TP_INFO}->{TP_ID} };
            $FORM{'COUNT_'.($#docs_ids+2)}  = $FORM{'SERVICE_COUNT_'. $Abon->{TP_INFO}->{TP_ID} };
            $FORM{'ORDER_'.($#docs_ids+2)}  = "[$Abon->{TP_INFO}->{TP_ID}] $Abon->{TP_INFO}->{NAME} $Abon->{COMMENTS}";
            $FORM{SEND_EMAIL}               = $FORM{ 'SEND_DOCS_' . $Abon->{TP_INFO}->{TP_ID} } || undef;
            push @docs_ids, int($#docs_ids+2);
          }

          if ($activate_notification && $users->{EMAIL}) {
             my $message = $html->tpl_show(_include('abon_notification3', 'Abon'), 
              { %{ $users }, %{ $Abon->{TP_INFO} } }, { OUTPUT2RETURN => 1 });
            sendmail("$conf{ADMIN_MAIL}", "$users->{EMAIL}", 
              "$conf{WEB_TITLE} - $Abon->{TP_INFO}->{NAME} $Abon->{COMMENTS}", "$message", 
              "$conf{MAIL_CHARSET}", '', {});
          }

          #$Abon->user_tariff_update({ UID   => "$users->{UID}",
          #                            TP_ID => "$line->[6]",
          #                            DATE  => $DATE,
          #                          });

          push @add_arr, $line->{tp_id};
        }
        else {
          $html->message('err', "$_ABON : $_ERROR", "$_TARIF_PLAN: [$line->{tp_id}] $line->{name}\n$ERR_SMALL_DEPOSIT");
          $FORM{ 'error_' . $line->{tp_id} }          = 1;
          $FORM{ 'error_comments_' . $line->{tp_id} } = $ERR_SMALL_DEPOSIT;
          if ($attr->{REGISTRATION}) {
            return 1;
          }
        }
      }
    }

    delete $FORM{IDS};
    $Abon->user_tariff_change(
      {
        %FORM,
        IDS => join(', ', @add_arr),
        DEL => join(', ', @del_arr)
      }
    );


    if ($#docs_ids > -1) {
      $FORM{create}     = 1;
      $FORM{CUSTOMER}   = '-';
      $FORM{IDS}        = join(', ', @docs_ids);
      docs_invoice({ QUITE => 1 });
    }

    if (!$Abon->{errno}) {
    }
    else {
      $html->message('err', $_ERROR, "[$Abon->{errno}] $err_strs{$Abon->{errno}}");
    }

    $html->message('info', $_ABON, $message) if ($message);
    return 0 if ($attr->{QUITE} || $attr->{REGISTRATION});
  }

  my $list  = $Abon->user_tariff_list($FORM{UID}, { COLS_NAME => 1 });
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_ABON",
      title      => [ '-', "$_SERVICE $_NAME", $_COMMENTS, $_SUM, $_PERIOD, "$_SERVICE $_COUNT",
        $_LAST_ABON, $_NEXT_ABON, "$_REDUCTION (%)", "$_CREATE $_DOCS", "$_SEND_NOTIFICATION", "$_MANUAL_ACTIVATE", '-' ],
      cols_align => [ 'left', 'left', 'left', 'right', 'left', 'right', 'right', 'center' ],
      qs         => $pages_qs,
      ID         => 'USER_ABON',
      class      => 'form'
    }
  );

  my @ids = ();
  if ($FORM{step}) {
    @ids = split(/, /, $FORM{IDS});
  }

  foreach my $line (@$list) {
    my $describe = $line->{comments} || $FORM{ 'COMMENTS_' . $line->{id} };
    my $state = ($#ids > -1) ? in_array($line->{id}, \@ids) : $line->{active_service};

    if ($FORM{ 'error_' . $line->{id} }) {
      $table->{rowcolor} = 'red';
    }
    else {
      $table->{rowcolor} = undef;
    }

    $table->addrow($state.
      $line->{id}
      . $html->form_input(
        'IDS',
        "$line->{id}",
        {
          TYPE  => 'CHECKBOX',
          STATE => ($state > 0) ? 1 : undef
        }
      ),
      ($permissions{5}) ? $html->button($line->{name}, "index=" . get_function_index('abon_tariffs') . '&ABON_ID=' . $line->{id}) : "$line->{name}",
      $html->form_input('COMMENTS_' . $line->{id}, $describe || $FORM{ 'error_comments_' . $line->{id} }, { SIZE => 40 }),
      "$line->{price}",
      $PERIODS[ $line->{period} ],
      $html->form_input('SERVICE_COUNT_' . $line->{id}, $line->{service_count} || 1, { SIZE => 5 }),
      $line->{date},
      ($line->{next_abon}) ? "$line->{next_abon}" : $html->date_fld2('DATE_' . $line->{id}, { FORM_NAME => 'ABON_USER_TPS', WEEK_DAYS => \@WEEKDAYS, MONTHES => \@MONTHES, DATE => '0000-00-00' }),
      $html->form_input('DISCOUNT_' . $line->{id}, "$line->{discount}", { SIZE => '8' }),
      $html->form_input('CREATE_DOCS_' . $line->{id}, "1",
        {
          TYPE  => 'CHECKBOX',
          STATE => ($line->{create_docs}) ? 1 : undef
        }
      ),
      $html->form_input('SEND_DOCS_' . $line->{id},  "1",
        {
          TYPE  => 'CHECKBOX',
          STATE => ($line->{send_docs}) ? 1 : undef
        }
      ),
      $html->form_input('MANUAL_FEE_' . $line->{id}, "1", 
        { TYPE  => 'checkbox', 
        	STATE => ($line->{manual_fee}) ? 1 : undef
        }),
      ($state && $line->{manual_activate}) ? $html->button("$_ACTIVATE", "index=$index&change=1&&ACTIVATE=$line->{id}&ABON_DATE=$line->{next_abon}&UID=$FORM{UID}", { BUTTON => 1 }) : ''
    );
  }

  my $action = "";
  if ($attr->{ACTION}) {
    $action = $html->br() . $html->form_input('finish', "$_REGISTRATION_COMPLETE", { TYPE => 'submit' }) . ' ' . $html->form_input('back', "$_BACK", { TYPE => 'submit' }) . ' ' . $html->form_input('next', "$_NEXT", { TYPE => 'submit' });
  }
  else {
    $action = $html->form_input('change', "$_CHANGE", { TYPE => 'submit' });
  }

  $table->{extra}    = 'colspan=11 align=\'center\'';
  $table->{rowcolor} = 'even';
  $table->addrow($action);

  print $html->form_main(
    {
      CONTENT => $table->show(),
      HIDDEN  => {
        index => "$index",
        UID   => $FORM{UID},
        step  => $FORM{step}
      },
      NAME => 'ABON_USER_TPS',

      #SUBMIT  => \%ACTION
    }
  );

}

#**********************************************************
#
#**********************************************************
sub abon_user_list {
  my ($attr) = @_;

  if ($attr->{ABON_ID}) {
    $LIST_PARAMS{ABON_ID} = $FORM{ABON_ID};
  }
  elsif ($FORM{ABON_ID}) {
    $FORM{subf} = $index;
    abon_tariffs();
    return 0;
  }

  $LIST_PARAMS{COMPANY_ID} = $FORM{COMPANY_ID} if ($FORM{COMPANY_ID});

  my $list  = $Abon->user_list({%LIST_PARAMS,
  	                            COLS_NAME    => 1
  	                           });
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_ABON - $_USERS",
      title      => [ $_LOGIN, $_FIO, $_TARIF_PLAN, "$_COMMENTS", $_SUM, $_PERIOD, $_LAST_ABON, 
       $_NEXT_ABON, "$_MANUAL_ACTIVATE" ],
      cols_align => [ 'left', 'right', 'left', 'right' ],
      qs         => $pages_qs,
      pages      => $Abon->{TOTAL},
      ID         => "ABON_USERS"
    }
  );

  my $delete = '';
  foreach my $line (@$list) {
    $table->addrow(user_ext_menu($line->{uid}, $line->{login}), 
      $line->{fio}, 
      $line->{tp_name}, 
      $line->{comments}, 
      $line->{price}, 
      $PERIODS[ $line->{period} ], 
      $line->{date}, 
      $line->{next_abon},
      $line->{manual_fee});
  }
  print $table->show();

  $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'right', 'right' ],
      rows       => [ [ "$_TOTAL:", $html->b($Abon->{TOTAL}) ] ]
    }
  );
  print $table->show();
}

#*******************************************************************
# Change user variant form
# abon_tariffs()
#*******************************************************************
sub abon_tariffs {

  $Abon->{ACTION}     = 'add';
  $Abon->{ACTION_LNG} = $_ADD;
  my @Payment_Types = ($_PREPAID, $_POSTPAID);

  if ($FORM{add}) {
    if (!$FORM{PRICE} || $FORM{PRICE} < 0) {
      $html->message('err', $_ERROR, "$ERR_WRONG_SUM");
    }
    else {
      $Abon->tariff_add({%FORM});
      if (!$Abon->{errno}) {
        $html->message('info', $_INFO, "$_ADDED");
      }
    }
  }
  elsif ($FORM{ABON_ID}) {
    $Abon = $Abon->tariff_info($FORM{ABON_ID});

    if (!$Abon->{errno}) {
      #$html->message('info', $_INFO, "$_CHANGING");
      $FORM{PERIOD} = $Abon->{PERIOD} if (!defined($FORM{PERIOD}));
      $Abon->{ACTION}     = 'change';
      $Abon->{ACTION_LNG} = $_CHANGE;
    }

    if ($tariffs->{errno}) {
      $html->message('err', $_ERROR, "[$tariffs->{errno}] $err_strs{$tariffs->{errno}}");
      return 0;
    }

    $pages_qs .= "&ABON_ID=$FORM{ABON_ID}";
    $LIST_PARAMS{ABON_ID} = $FORM{ABON_ID};
    my %F_ARGS = (ABON_ID => $Abon);

    $Abon->{NAME_SEL} = $html->form_main(
      {
        CONTENT => $html->form_select(
          'ABON_ID',
          {
            SELECTED => $Abon->{ID} || $FORM{ABON_ID},
            SEL_MULTI_ARRAY   => $Abon->tariff_list(),
            MULTI_ARRAY_KEY   => 7,
            MULTI_ARRAY_VALUE => 0,
          }
        ),
        HIDDEN => { index => "$index" },
        SUBMIT => { show  => "$_SHOW" }
      }
    );

    func_menu(
      {
        'ID'   => $Abon->{ID},
        $_NAME => $Abon->{NAME_SEL}
      },
      {},
      { f_args => {%F_ARGS} }
    );

    if ($FORM{subf}) {
      return 0;
    }
    elsif ($FORM{change}) {
      $Abon->tariff_change({%FORM});
      if (!$Abon->{errno}) {
        $html->message('info', $_INFO, "$_CHANGED");
      }
    }
  }
  elsif (defined($FORM{del}) && $FORM{is_js_confirmed}) {
    $Abon->tariff_del($FORM{del});
    if (!$Abon->{errno}) {
      $html->message('info', $_INFO, "$_DELETED");
    }
  }

  if ($Abon->{errno}) {
    $html->message('err', $_ERROR, "[$Abon->{errno}] $err_strs{$Abon->{errno}}");
  }

  $Abon->{PERIOD_SEL} = $html->form_select(
    'PERIOD',
    {
      SELECTED     => $FORM{PERIOD},
      SEL_ARRAY    => \@PERIODS,
      ARRAY_NUM_ID => 1

    }
  );

  $Abon->{PAYMENT_TYPE_SEL} = $html->form_select(
    'PAYMENT_TYPE',
    {
      SELECTED => $Abon->{PAYMENT_TYPE} || $FORM{PAYMENT_TYPE},
      SEL_ARRAY    => [ $_PREPAID, $_POSTPAID ],
      ARRAY_NUM_ID => 1
    }
  );

  $Abon->{PRIORITY} = $html->form_select(
    'PRIORITY',
    {
      SELECTED     => $Abon->{PRIORITY} || 0,
      SEL_ARRAY    => [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 13, 14, 15 ],
      ARRAY_NUM_ID => 1
    }
  );

  my @ACCOUNT_PRIORITY = ($_MAIN, "$_EXTRA $_BILL", "$_MAIN, $_EXTRA $_BILL");

  $Abon->{ACCOUNT_SEL} = $html->form_select(
    'ACCOUNT',
    {
      SELECTED     => $Abon->{ACCOUNT} || 0,
      SEL_ARRAY    => \@ACCOUNT_PRIORITY,
      ARRAY_NUM_ID => 1
    }
  );

  $Abon->{PERIOD_ALIGNMENT} = ($Abon->{PERIOD_ALIGNMENT}) ? 'checked' : '';
  $Abon->{NONFIX_PERIOD}    = ($Abon->{NONFIX_PERIOD})    ? 'checked' : '';

  if ($conf{EXT_BILL_ACCOUNT}) {
    my $checked = ($Abon->{EXT_BILL_ACCOUNT}) ? ' checked' : '';
    $Abon->{EXT_BILL_ACCOUNT} = "<tr><td>$_EXTRA $_BILL:</td><td><input type='checkbox' name='EXT_BILL_ACCOUNT' value='1' $checked></td></tr>\n";
  }
  else {
    $Abon->{EXT_BILL_ACCOUNT} = '';
  }

  push @FEES_METHODS, @EX_FEES_METHODS if (@EX_FEES_METHODS);

  my %FEES_METHODS = %{ get_fees_types({}) };

  $Abon->{FEES_TYPES_SEL} = $html->form_select(
    'FEES_TYPE',
    {
      SELECTED => $Abon->{FEES_TYPE},
      SEL_HASH => { '' => '', %FEES_METHODS },
      NO_ID    => 1,
      SORT_KEY => 1
    }
  );

  $Abon->{FEES_TYPE}             = ($Abon->{FEES_TYPE})             ? 'checked' : '';
  $Abon->{NOTIFICATION_ACCOUNT}  = ($Abon->{NOTIFICATION_ACCOUNT})  ? 'checked' : '';
  $Abon->{ALERT}                 = ($Abon->{ALERT})                 ? 'checked' : '';
  $Abon->{ALERT_ACCOUNT}         = ($Abon->{ALERT_ACCOUNT})         ? 'checked' : '';
  $Abon->{CREATE_ACCOUNT}        = ($Abon->{CREATE_ACCOUNT})        ? 'checked' : '';
  $Abon->{ACTIVATE_NOTIFICATION} = ($Abon->{ACTIVATE_NOTIFICATION}) ? 'checked' : '';
  $Abon->{VAT}                   = ($Abon->{VAT})                   ? 'checked' : '';
  $Abon->{DISCOUNT}              = ($Abon->{DISCOUNT})              ? 'checked' : '';
  $Abon->{MANUAL_ACTIVATE}       = ($Abon->{MANUAL_ACTIVATE})       ? 'checked' : '';
  $Abon->{USER_PORTAL}           = ($Abon->{USER_PORTAL})           ? 'checked' : '';

  $html->tpl_show(_include('abon_tp', 'Abon'), $Abon);

  my $list  = $Abon->tariff_list({%LIST_PARAMS});
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_ABON",
      title      => [ $_NAME, $_SUM, $_PERIOD, $_PAYMENT_TYPE, $_PRIORITY, $_USERS, '-', '-' ],
      cols_align => [ 'left', 'right', 'left', 'right', 'right', 'center', 'center' ],
      qs         => $pages_qs,
      ID         => 'ABON_TARIFFS'
    }
  );

  my $delete = '';
  foreach my $line (@$list) {
    if ($permissions{4}{1}) {
      $delete = $html->button($_DEL, "index=$index&del=$line->[7]", { MESSAGE => "$_DEL $line->[0]?", CLASS => 'del' });
    }
    $table->{rowcolor} = ($FORM{ABON_ID} == $line->[7]) ? $_COLORS[0] : undef;
    $table->addrow(
      $html->button("$line->[0]", "index=$index&ABON_ID=$line->[7]"),
      "$line->[1]",
      $PERIODS[ $line->[2] ],
      $Payment_Types[ $line->[3] ],
      $line->[4],
      $html->button("$line->[6]", "index=" . get_function_index('abon_user_list') . "&ABON_ID=$line->[7]"),
      $html->button("$_CHANGE", "index=$index&ABON_ID=$line->[7]", { CLASS => 'change' }), $delete
    );
  }

  print $table->show();
}

#**********************************************************
# daily_fees
#**********************************************************
sub abon_periodic {
  my ($attr) = @_;

  my $debug = $attr->{DEBUG} || 0;
  my $debug_output = '';
  $debug_output .= "ABON: Periodic payments\n" if ($debug > 1);

  $LIST_PARAMS{LOGIN} = $attr->{LOGIN} if ($attr->{LOGIN});
  if ($attr->{TP_ID}) {
  	$attr->{TP_ID} =~ s/,/;/g;
    $LIST_PARAMS{TP_ID} = $attr->{TP_ID} ;
  }

  if (in_array('Docs', \@MODULES) ) {
    $FORM{QUICK} = 1;
    load_module('Docs');
  }


  $Abon->{debug} = 1 if ($debug > 6);
  my $list = $Abon->periodic_list({ %LIST_PARAMS, 
  	                                DELETED      => 0,
  	                                LOGIN_STATUS => 0,
  	                                COLS_NAME    => 1,
  	                                COLS_UPPER   => 1,
  	                              });
  
  my %docs_info = ();
  my ($y, $m, $d) = split(/-/, $ADMIN_REPORT{DATE}, 3);
  $m--;

  foreach my $info (@$list) {
    $info->{DATETIME}  = "$ADMIN_REPORT{DATE} $TIME";
    $info->{BILL_ID}   = $line->{EXT_BILL_ID} if ($info->{EXT_BILL_ACCOUNT});

    if ($debug > 2) {
      $debug_output .= "UID: $info->{UID} TP_ID: $info->{TP_ID} SUM: $info->{PRICE} DEPOSIT: " . (($info->{DEPOSIT}) ? $info->{DEPOSIT} : 'Undefined') . " NOT1: $info->{NOTIFICATION1} NOT2: $info->{NOTIFICATION2} ABON: $info->{ABON_DATE}\n";
    }

    if (defined($info->{DEPOSIT})) {
      my %user = (
        UID     => $info->{UID},
        BILL_ID => $info->{BILL_ID}
      );

      my %PARAMS = (
        DESCRIBE => "$_ABON: ($info->{TP_ID}) $info->{TP_NAME}",
        METHOD   => $info->{FEES_TYPE},
        DATE     => $ADMIN_REPORT{DATE}
      );

      $info->{CREDIT}   = 0 if (!$info->{CREDIT});
      $PARAMS{DESCRIBE} = "$_ABON: $info->{TP_NAME}. $info->{COMMENTS}" if ($info->{COMMENTS});
      $abon_date = $ADMIN_REPORT{DATE} if (!$abon_date && $info->{PERIOD} == 1 && $d == 1);
      if ($info->{SERVICE_COUNT} > 1) {
        $info->{PRICE} = $info->{SERVICE_COUNT} * $info->{PRICE}; 
      }
      $info->{PRICE} = $info->{PRICE} * (100 - $info->{DISCOUNT}) / 100 if ($info->{DISCOUNT} > 0);

      #Get daily abon
      if (! $info->{MANUAL_FEE} && ($ADMIN_REPORT{DATE} eq $info->{ABON_DATE} || $info->{PERIOD} == 0)) {
        if ($info->{DEPOSIT} && ($info->{DEPOSIT} + $info->{CREDIT} > 0 || $info->{PAYMENT_TYPE} == 1) && $info->{DISABLE} == 0) {
        	$PARAMS{DESCRIBE}=~s/\'/\\\'/g;
          $fees->take(\%user, $info->{PRICE}, {%PARAMS}) if ($info->{DISCOUNT} < 100);
          $Abon->user_tariff_update(
            {
              UID   => "$info->{UID}",
              DATE  => $ADMIN_REPORT{DATE},
              TP_ID => "$info->{TP_ID}"
            }
          );

          if ($fees->{errno}) {
          	print "$fees->{errno} $fees->{errstr}";
          }

          if ($info->{CREATE_ACCOUNT} && $info->{CREATE_DOCS}) {
          	push @{ $docs_info{$user{UID}} }, {
             SUM        => $info->{PRICE} / $info->{SERVICE_COUNT},
             COUNT      => $info->{SERVICE_COUNT},
             ORDER      => "$info->{TP_NAME} $info->{COMMENTS}",
             SEND_EMAIL => $info->{SEND_DOCS} || 0
            };
          }

          if ($ext_cmd) {
            my $cmd = $ext_cmd;
            $cmd .= " ACTION=ACTIVE UID=$user{UID} TP_ID=$info->{TP_ID} COMMENTS=\"$info->{COMMENTS}\" SUM=$info->{PRICE}";
            $ret = system($cmd);
          }

          if ($info->{ACTIVATE_NOTIFICATION} && $info->{SEND_DOCS}) {
            my $message = $html->tpl_show(_include('abon_notification3', 'Abon'), { %$Abon, %$info }, { OUTPUT2RETURN => 1 });
            sendmail("$conf{ADMIN_MAIL}", "$info->{EMAIL}", "$conf{WEB_TITLE} - $info->{TP_NAME} $info->{COMMENTS}", "$message", "$conf{MAIL_CHARSET}", '', {});
          }

          $debug_output .= "$user{UID} TP_ID: $info->{TP_ID} SUM: $info->{PRICE} ACCOUNT: $info->{CREATE_ACCOUNT} " . (($info->{CREATE_ACCOUNT}) ? "ACCOUNT SEND_EMAIL: $info->{EMAIL}" : '') . (($info->{ACTIVATE_NOTIFICATION}) ? " NOTIFICATION: $info->{EMAIL}" : '') . "\n" if ($debug > 0);
        }
        #Send Alert
        elsif ($ADMIN_REPORT{DATE} eq $info->{ABON_DATE} && $info->{SEND_DOCS}) {
          $debug_output .= "$user{UID} SUM: $info->{PRICE} TP_ID: $info->{TP_ID} $info->{PRICE} ACCOUNT: $info->{CREATE_ACCOUNT} Alert EMAIL: $info->{EMAIL}\n" if ($debug > 0);

          my $message = $html->tpl_show(_include('abon_alert', 'Abon'), { %$Abon, %$info }, { OUTPUT2RETURN => 1 });
          my $attach;
          if ($info->{ALERT_ACCOUNT} && $info->{CREATE_DOCS}) {
          	push @{ $docs_info{$user{UID}} }, {
              SUM        => $info->{PRICE} / $info->{SERVICE_COUNT},
              COUNT      => $info->{SERVICE_COUNT} || 1,
              ORDER      => "$info->{TP_NAME} $info->{COMMENTS}",
              SEND_EMAIL => $info->{SEND_DOCS} || 0
            };

            $Abon->user_tariff_update(
              {
                UID                     => "$user{UID}",
                NOTIFICATION            => 1,
                DATE                    => $ADMIN_REPORT->{DATE},
                NOTIFICATION_ACCOUNT_ID => $FORM->{ACCOUN_ID},
                TP_ID                   => "$info->{TP_ID}"
              }
            );
          }

          sendmail("$conf{ADMIN_MAIL}", "$info->{EMAIL}", "$conf{WEB_TITLE} - $info->{TP_NAME} $info->{COMMENTS}", "$message", "$conf{MAIL_CHARSET}", '', { ATTACHMENTS => $attach });

          if ($ext_cmd) {
            my $cmd = $ext_cmd;
            $cmd .= " ACTION=ALERT UID=$user{UID} TP_ID=$info->{TP_ID} COMMENTS=\"$info->{COMMENTS}\" SUM=$info->{PRICE}";
            $ret = system($cmd);
          }
        }
      }
      #Notification Section
      elsif ($info->{NOTIFICATION1} eq $ADMIN_REPORT{DATE}) {
        my $message = $html->tpl_show(_include('abon_notification1', 'Abon'), { %$Abon, %$info }, { OUTPUT2RETURN => 1 });
        my $attach;
        $debug_output .= "$user{UID} TP_ID: $info->{TP_ID} SUM: $info->{PRICE} ACCOUNT: $info->{CREATE_ACCOUNT} Notification 1 EMAIL: $info->{EMAIL}\n" if ($debug > 0);

        if ($info->{NOTIFICATION_ACCOUNT} && $info->{CREATE_DOCS}) {
        	push @{ $docs_info{$user{UID}} }, {   	
              SUM        => $info->{PRICE} / $info->{SERVICE_COUNT},
              COUNT      => $info->{SERVICE_COUNT} || 1,
              ORDER      => "$info->{TP_NAME} $info->{COMMENTS}",
              SEND_EMAIL => $info->{SEND_DOCS} || 0
          };
        }

        $Abon->user_tariff_update(
          {
            UID                     => "$user{UID}",
            NOTIFICATION            => 1,
            DATE                    => $ADMIN_REPORT{DATE},
            NOTIFICATION_ACCOUNT_ID => $FORM{ACCOUNT_ID},
            TP_ID                   => "$info->{TP_ID}"
          }
        );

        if ($info->{SEND_DOCS}) {
          sendmail("$conf{ADMIN_MAIL}", "$info->{EMAIL}", "$conf{WEB_TITLE} - $info->{TP_NAME} $info->{COMMENTS}", "$message", "$conf{MAIL_CHARSET}", '', { ATTACHMENTS => $attach });
        }
      }
      elsif ($info->{NOTIFICATION2} eq $ADMIN_REPORT{DATE}) {
        $debug_output .= "$user{UID} TP_ID: $info->{TP_ID} SUM: $info->{PRICE} ACCOUNT: $info->{NOTIFICATION1_ACCOUNT_ID} Notification 2 EMAIL: $info->{email}\n" if ($debug > 0);

        my $message = $html->tpl_show(_include('abon_notification2', 'Abon'), { %$Abon, %$info }, { OUTPUT2RETURN => 1 });
        my $attach;

        if ($info->{NOTIFICATION1_ACCOUNT_ID} && $info->{CREATE_DOCS}) {
          $FORM{print}            = $info->{NOTIFICATION1_ACCOUNT_ID};
          $FORM{CHECK_PEYMENT_ID} = 1;
          $FORM{pdf}              = $conf{DOCS_PDF_PRINT};
          my $content = docs_invoice({ QUITE => 1, OUTPUT2RETURN => 1 });
          if ($content) {
            $attach = [
              {
                CONTENT      => $content,
                CONTENT_TYPE => 'Content-type: application/pdf',
                FILENAME     => 'invoice.pdf'
              }
            ];
          }
        }

        $Abon->user_tariff_update(
          {
            UID          => "$user{UID}",
            NOTIFICATION => 2,
            DATE         => $ADMIN_REPORT{DATE},
            TP_ID        => "$info->{TP_ID}"
          }
        );
        if ($info->{SEND_DOCS}) {
          sendmail("$conf{ADMIN_MAIL}", "$info->{EMAIL}", "$conf{WEB_TITLE} - $info->{TP_NAME} $info->{COMMENTS}", "$message", "$conf{MAIL_CHARSET}", '', { ATTACHMENTS => $attach });
        }
      }
    }
    else {
      print "[ $info->{UID} ] $info->{LOGIN} - Don't have money account\n";
    }
  }
  
  #Create and Send documents
  #load_module('Docs');
if (in_array('Docs', \@MODULES) ) {
	$^W=0;
  while (($uid, $values) = each %docs_info) {
  	my $i=1;
  	my @docs_ids=();
  	%FORM = ();
  	foreach my $doc (@{ $values }) {
  		next if ($doc->{SUM} == 0);  		
      $FORM{'SUM_'.$i}    = $doc->{SUM};
      $FORM{'COUNTS_'.$i} = $doc->{COUNT};
      $FORM{'ORDER_'.$i}  = $doc->{ORDER};
      $FORM{SEND_EMAIL}   = ($FORM{SEND_EMAIL}) ? 1 : $doc->{SEND_EMAIL};
      push @docs_ids, "$i";
      $i++;
    }

    $FORM{IDS}   = join(', ', @docs_ids);
    $FORM{UID}   = $uid;
    $FORM{create}= 1;

  	docs_invoice({ QUITE => 1, 
  		             SEND_EMAIL     => $FORM{SEND_EMAIL},
  		             GET_EMAIL_INFO => $FORM{SEND_EMAIL} 
  		           });
  }
  $^W=1;
}

  $DEBUG .= $debug_output;
  return $debug_output;
}

#**********************************************************
#
#**********************************************************
sub abon_get_month_fee {
  my ($Abon, $attr) = @_;

  my $result_sum = 0;

  my $message = '';

  #Get month fee
  if ($Abon->{TP_INFO}->{PRICE} > 0) {
    my $sum  = $Abon->{TP_INFO}->{PRICE};
    my $user = $users->info($Abon->{UID});

    #Current Month
    my ($y,        $m,        $d)        = split(/-/, $DATE,             3);
    my ($active_y, $active_m, $active_d) = split(/-/, $Abon->{ACTIVATE}, 3);
    if (int("$y$m$d") < int("$active_y$active_m$active_d")) {
      return;
    }

    if ($Abon->{TP_INFO}->{PERIOD_ALIGNMENT}) {
      $message = ", $_PERIOD_ALIGNMENT\n";
      my $days_in_month = ($m != 2 ? (($m % 2) ^ ($m > 7)) + 30 : (!($y % 400) || !($y % 4) && ($y % 25) ? 29 : 28));

      if ($Abon->{ACTIVATE} && $Abon->{ACTIVATE} ne '0000-00-00') {
        $days_in_month = ($active_m != 2 ? (($active_m % 2) ^ ($active_m > 7)) + 30 : (!($active_y % 400) || !($active_y % 4) && ($active_y % 25) ? 29 : 28));
        $d = $active_d;
      }

      $conf{START_PERIOD_DAY} = 1 if (!$conf{START_PERIOD_DAY});
      $sum = sprintf("%.2f", $sum / $days_in_month * ($days_in_month - $d + $conf{START_PERIOD_DAY}));
    }

    return 0 if ($sum == 0);

    my $periods = 0;
    if ($active_m > 0 && $active_m < $m) {
      $periods = $m - $active_m;
    }
    elsif ($active_m > 0 && ($active_m >= $m && $active_y < $y)) {
      $periods = 12 - $active_m + $m;
    }

    $message = "$_ABON: " . (($Abon->{COMMENTS}) ? " $Abon->{TP_INFO}->{NAME} $Abon->{COMMENTS}" : " [$Abon->{TP_INFO}->{TP_ID}] $Abon->{TP_INFO}->{NAME} ") . $message . "\n";

    for (my $i = 0 ; $i <= $periods ; $i++) {
      if ($active_m + $i > 12) {
        $active_m = 0;
        $active_y = $active_y + 1;
      }

      $m = sprintf("%.2d", $active_m + $i);

      if ($i > 0) {
        $sum     = $Abon->{TP_INFO}->{PRICE};
        $message = "$_ABON: $sum ($Abon->{TP_INFO}->{TP_ID})\n";
        $DATE    = "$active_y-$m-01";
        $TIME    = "00:00:00";
      }
      elsif ($Abon->{ACTIVATE} && $Abon->{ACTIVATE} ne '0000-00-00') {
        $DATE = "$active_y-$m-$active_d";
        $TIME = "00:00:00";

        #if ($Abon->{TP_INFO}->{PERIOD_ALIGNMENT}) {
        #  $users->change($Abon->{UID}, { ACTIVATE => '0000-00-00',
        #  UID      => $Abon->{UID} });
        # }
      }

      if ($Abon->{COMMENTS}) {
        $message .= $Abon->{COMMENTS};
      }

      $fees->take(
        $users, $sum,
        {
          DESCRIBE => $message,
          METHOD   => $Abon->{TP_INFO}->{FEES_TYPE},
          DATE     => "$DATE $TIME"
        }
      );

      if ($fees->{errno}) {
        $html->message('err', $_ERROR, "[$fees->{errno}] $fees->{errstr}");
        $message = '';
      }
    }
  }

  return $message;
}

#**********************************************************
# get services for invoice
#**********************************************************
sub abon_docs {
  my ($attr) = @_;

  my @services = ();
  my $UID      = $FORM{UID} || $attr->{UID};
  my $list     = $Abon->user_tariff_list($UID, { COLS_NAME => 1 });
  
  return \@services if ($Abon->{TOTAL} == 0);
  
  foreach my $line (@$list) {
    if ($line->{date}) {
      if ($line->{discount} > 0) {
        $line->{price} = $line->{price} * ((100 - $line->{discount}) / 100);
      }

      if ($line->{service_count} > 1) {
      	$line->{price} = $line->{price} * $line->{service_count};
      }

      # NAME| ID | SUM
      push @services, "$_ABON: ($line->{id}) " . "$line->{name}" . "|$line->{comments}|$line->{price}";
    }
  }

  return \@services;
}

1
