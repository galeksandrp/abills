# Зелений -    [online] онлайн
# Фіолетовий - [offline] оффлайн
# Жовтий -     [switch] відображення свічів
# Червоний -   [error] поломки на свічах
# Оранжевий -  [inwork] тех. роботи на свічах
my %map_colors = (
  online  => [ 0,   159, 2 ],
  offline => [ 131, 9,   159 ],
  switch  => [ 247, 255, 42 ],
  error   => [ 255, 0,   0 ],
  inwork  => [ 255, 128, 0 ],
);

use Nas;
my $Nas = Nas->new($db, $admin, \%conf);

use Maps;
my $Maps = Maps->new($db, $admin, \%conf);

#***********************************************************
# check Maps.pm version
#***********************************************************
sub check_version {
  if ($Maps::VERSION < 2.03) {
    $html->message('info', "UPDATE", "Please update module 'Maps' to version 2.03 or higher. http://abills.net.ua/");
    return 1;
  }
  else {
    return 0;  
  }  
}

#***********************************************************
#  check for installed GD
#***********************************************************
sub check_modules {
  if (eval { require GD }) {
    GD->import();    # if needed
    return 0;
  }
  else {
    print "Content-Type: text/html\n\n";
    print "Can't load 'GD' ($desc); Please install GD. http://search.cpan.org/dist/GD/";
    return 1;
  }
}

#***********************************************************
# menu: location SYSTEM - > MAPS
#***********************************************************
sub maps_add {

  if (check_version()) {
    return 0;
  }
  if (check_modules()) {
    return 0;
  }
  elsif ($FORM{MAP_SHOW}) {
    print generateImage({ DISTRICT_ID => $FORM{DISTRICT_ID}, 
    	                    SHOW_NAS    => 1, 
    	                    SHOW_USERS  => 1 
    	                  });
    return 0;
  }
  my %info = ();
  my $list = $users->district_list({ PAGE_ROWS => 10000, COLS_NAME => 1 });
  my %district_list = ();
  foreach my $line (@$list)  {
    if (-f $conf{TPL_DIR} . '/maps/' . $line->{id} . '.gif' || 
        -f $conf{TPL_DIR} . '/maps/' . $line->{id} . '.jpg' || 
        -f $conf{TPL_DIR} . '/maps/' . $line->{id} . '.png') {
        $district_list{$line->{id}}=$line->{name};
     }
  }
  

  $info{DISTRICT_SEL} = $html->form_select("DISTRICT_ID", {
    SELECTED       => $FORM{DISTRICT_ID},
    SEL_HASH       => \%district_list, 
    NO_ID          => 1,
    MAIN_MENU      => get_function_index('form_districts'),
    MAIN_MENU_AGRV => "chg=$FORM{DISTRICT_ID}"
  });

  $html->tpl_show(_include('maps_district_select', 'Maps'), { %info });

  if ($FORM{DISTRICT_ID}) {
    $users->{ADDRESS_TPL} = $html->tpl_show(templates('form_address_sel'), $users, { OUTPUT2RETURN => 1 });
    $html->tpl_show(_include('maps_add', 'Maps'), $users);

    # Javascript show tip' s  **********************************
    my $list = $users->district_list({ ID        => $FORM{DISTRICT_ID}, 
    	                                 PAGE_ROWS => 100,
    	                                 COLS_NAME => 1  });

    foreach my $line (@$list) {
      maps_map_show(
        {
          DISTRICT_ID => $line->{id},
          SHOW_NAS    => $show_nas,
          SHOW_USERS  => $show_users
        }
      );
    }
  }

  if ($FORM{change}) {
    $users->build_change("$FORM{LOCATION_ID}", { %FORM, ID => $FORM{LOCATION_ID} });
    #$Maps->build_change("$FORM{LOCATION_ID}", { %FORM, ID => $FORM{LOCATION_ID} });

    if (!$users->{errno}) {
      $html->message('info', $_ADDRESS_BUILD, "$_CHANGED");
    }
    elsif ($FORM{MAP_SHOW}) {
      print generateImage({ DISTRICT_ID => $FORM{DISTRICT_ID} });
      return 0;
    }
  }

}

#**********************************************************
# Main map menu. Location: Other - > Maps
#**********************************************************
sub maps_main {

  if (check_version()) {
    return 0;
  }
  if (check_modules()) {
    return 0;
  }
  elsif ($FORM{MAP_SHOW}) {
    print generateImage({ DISTRICT_ID => $FORM{DISTRICT_ID}, SHOW_NAS => $FORM{SHOW_NAS}, SHOW_USERS => $FORM{SHOW_USERS} });
    return 0;
  }

  $newcheckbox = $html->form_select("DISTRICT_ID", {
    SELECTED       => $FORM{DISTRICT_ID},
    SEL_LIST       => $users->district_list({ PAGE_ROWS => 10000, COLS_NAME => 1 }), 
    NO_ID          => 1,
    MAIN_MENU      => get_function_index('form_districts'),
    MAIN_MENU_AGRV => "chg=$FORM{DISTRICT_ID}"
  });


  $user_filter = $html->form_select("USER_FILTER", {
    SELECTED     => $FORM{USER_FILTER} || 0,
    SEL_ARRAY    => [$_ALL, $_ONLY_ONLINE, $_ONLY_OFFLINE],
    ARRAY_NUM_ID => 0,
    NO_ID        => 1
  });
  

  $html->tpl_show(
    _include('maps_view_region', 'Maps'),
    {
      TYPES           => $user_filter,
      DISTRICTS_TABLE => $newcheckbox,
      SHOW_USERS      => (defined($FORM{SHOW_USERS})) ? (($FORM{SHOW_USERS} == 1) ? 'checked' : undef) : '',
      SHOW_NAS        => (defined($FORM{SHOW_NAS})) ? (($FORM{SHOW_NAS} == 1) ? 'checked' : undef) : ''
    }
  );

  if ($FORM{SHOW}) {
    if ($FORM{DISTRICT_ID}) {
      if ($FORM{SHOW_NAS} and !$FORM{SHOW_USERS}) {
        $show_nas   = 1;
        $show_users = 0;
      }
      elsif ($FORM{SHOW_USERS} and !$FORM{SHOW_NAS}) {
        $show_nas   = 0;
        $show_users = 1;
      }
      elsif ($FORM{SHOW_USERS} and $FORM{SHOW_NAS}) {
        $show_nas   = 1;
        $show_users = 1;
      }

      my @DISTRICTS_ARR = split(/, /, $FORM{DISRICT_IDS});
    }

    return 0 if (!$FORM{DISTRICT_ID});

    my $list = $users->district_list({ ID => $FORM{DISTRICT_ID}, COLS_NAME => 1 });

    foreach my $line (@$list) {
      maps_map_show(
        {
          DISTRICT_ID => $line->{id},
          SHOW_NAS    => $show_nas,
          SHOW_USERS  => $show_users
        }
      );
    }

  }
}

#***********************************************************
# Show map (Javascript tip's)
#***********************************************************
sub maps_map_show {
  my ($attr) = @_;

  my $list = $Maps->users_online_list({ PAGE_ROWS => 10000,
  	                                    COLS_NAME => 1 });

  foreach my $line (@$list) {
    push @{ $USERS_ONLINE{ $line->{uid} } }, {
      LOGIN => $line->{login},
      UID   => $line->{uid},
      IP    => $line->{ip}
      #DURATION => $line->[9]
    };
  }

  #Get all NAS  **********************************************
  my $list2 = $Maps->nas_list({ SHOW_MAPS   => 1, 
  	                            PAGE_ROWS   => 10000, 
  	                            DISTRICT_ID => $attr->{DISTRICT_ID},
  	                            COLS_NAME   => 1
  	                          });

  my %NAS_INFO = ();
  foreach my $line2 (@$list2) {
    push @{ $NAS_INFO{ $line2->{nas_x} } },
    {
      NAS_X    => $line2->{map_x},
      NAS_Y    => $line2->{map_y},
      IP       => $line2->{map_x},
      NAS_ID   => $line2->{nas_id},
      NAS_NAME => $line2->{nas_name},
      NAS_TYPE => $line2->{nas_type},
    };
  }

  #Get all users  ********************************************
  $list = $Maps->all_users_list(
    {
      LOCATION_ID => '>0',
      PAGE_ROWS   => 10000,
      COLS_NAME   => 1
     }
  );

  my %USERS_INFO = ();
  foreach my $line (@$list) {
    push @{ $USERS_INFO{ $line->{build_id} } },
    {
      LOGIN        => $line->{login},
      UID          => $line->{uid},
      DEPOSIT      => $line->{deposit},
      ADDRESS_FLAT => $line->{address_flat}
    };
  }

  #Get all installations  ********************************************
  #my $list5 = $Storage->storage_installation_list({
  #													DISTRICTS => $attr->{DISTRICT_ID},
  #													PAGE_ROWS => '2000'
  #												});
  #
  #my %INSTALLATIONS_INFO = ();
  #
  #foreach my $line5 ( @$list5 ) {
  #  push @{ $INSTALLATIONS_INFO{$line5->[2]} }, {
  # 		LOCATION_ID	=> $line5->[2],
  #  		NAME     	=> $line5->[9],
  #    	COUNT 		=> $line5->[6],
  #    	SUM 		=> $line5-> [22] } ;
  # print $line5->[2] . "<br />";
  # print $line5->[9] . "<br />";
  # print $line5->[6] . "<br />";
  # print $line5->[19] . "<br />";

  #}

  #Get builds (javascript)  **********************************
  $list = $users->build_list({ SHOW_MAPS   => '_SHOW', 
  	                          DISTRICT_ID => $attr->{DISTRICT_ID}, 
  	                          PAGE_ROWS   => 10000,
  	                          COLS_NAME   => 1
  	                        });
  
  my $cnt = 0;
  foreach my $line (@$list) {
    my $user_info   = '';
    my $user_online = '';

    if ($USERS_INFO{ $line->{id} }) {
      foreach my $u (@{ $USERS_INFO{ $line->{id} } }) {
        $user_info .= "<strong><a href=$SELF_URL?index=11&UID=$u->{UID}>$u->{LOGIN}</a></strong> $_FLAT $u->{ADDRESS_FLAT} $_DEPOSIT $u->{DEPOSIT}<br>";
        if ($USERS_ONLINE{ $u->{UID} }) {
          foreach my $uo (@{ $USERS_ONLINE{ $u->{UID} } }) {
            $cnt++;
            $user_online .= "<strong><a href=$SELF_URL?index=11&UID=$uo->{UID}>$uo->{LOGIN}</a></strong> IP:$uo->{IP}<br>";
          }
        }
        if ($INSTALLATIONS_INFO{ $line->{id} }) {
          foreach my $install (@{ $INSTALLATIONS_INFO{ $line->{id} } }) {
            $install_info .= "$install->{NAME} $install->{COUNT}";
          }
        }
      }
    }
    else {
      $user_info    = "";
      $user_online  = "";
      $install_info = "";
    }

    #   if ($USERS_ONLINE{$line->[6]}){
    #		foreach my $u ( @{ $USERS_ONLINE{$line->[6]} } ) {
    #
    #
    #      $user_online .= "<strong><a href=$SELF_URL?index=11&UID=$u->{UID}>$u->{LOGIN}</a></strong> IP:$u->{IP}<br>";
    #
    #     }
    #   }

    $count_offline = $#{ $USERS_INFO{ $line->{id} } } + 1;
    $count_online  = $cnt;
    $cnt           = 0;

    #***********************************************************
    # template 	(maps_location_info)   +++DISTRICT_ID => $attr->{DISTRICT_ID},
    #***********************************************************
    $user_online = "<strong><font color=green>$_USER online($count_online)</font></strong><br /> $user_online ";
    $user_info = "<strong><font color=red>$_USERS($count_offline):</font></strong><br />  $user_info ";
    
    if($FORM{USER_FILTER} == 1) {
      $user_info = '';
      $count_offline = '';
    }
    elsif($FORM{USER_FILTER} == 2) {
      $count_online = '';
      $user_online = '';
    }

    $tpl_obj .= $html->tpl_show(
      _include('maps_location_info', 'Maps'),
      {
        STREET_ID          => $line->{street_name},
        NUMBER             => $line->{number},
        MAP_X              => $line->{map_x},
        MAP_Y              => $line->{map_y},
        MAP_X2             => $line->{map_x2},
        MAP_Y2             => $line->{map_y2},
        MAP_X3             => $line->{map_x3},
        MAP_Y3             => $line->{map_y3},
        MAP_X4             => $line->{map_x4},
        MAP_Y4             => $line->{map_y4},
        USER_OFFLINE       => $user_info,
        USERS_ONLINE       => $user_online,
        #	                                                          					INSTALL_INFO  => $install_info
      },
      { OUTPUT2RETURN => 1 }
    );

    # Template switch info and param  ***************************
    if ($NAS_INFO{ $line->{id} }) {

      foreach my $nas (@{ $NAS_INFO{ $line->{id} } }) {
        $nas_info .= "<strong>IP:</strong> $nas->{IP}<br /><strong>$_NAME:</strong> $nas->{NAS_NAME}<br /><strong>$_TYPE:</strong> $nas->{NAS_TYPE}<br />";
      }

      $tpl_obj_nas .= $html->tpl_show(
        _include('maps_nas_info', 'Maps'),
        {
          MAP_NAS_X  => $line->{map_x},
          MAP_NAS_Y  => $line->{map_y},
          MAP_NAS_X2 => $line->{map_x2} - 9,
          MAP_NAS_Y2 => $line->{map_y2} - 12,
          MAP_NAS_X3 => $line->{map_x3} + 9,
          MAP_NAS_Y3 => $line->{map_x3} - 12,
          NAS_INFO   => $nas_info
        },
        { OUTPUT2RETURN => 1 }
      );
    }
    $nas_info = '';
  }

  #***********************************************************
  # template 	(maps_show_map)
  #***********************************************************

  $html->tpl_show(
    _include('maps_map_show', 'Maps'),
    {
      OBJECTS     => $tpl_obj,
      NAS         => $tpl_obj_nas,
      DISTRICT_ID => $attr->{DISTRICT_ID},
      SHOW_NAS    => $attr->{SHOW_NAS},
      SHOW_USERS  => $attr->{SHOW_USERS}
    }
  );

}

#**********************************************************
# Draw image with poligons for builds and nas
#**********************************************************
sub generateImage {
  my ($attr) = @_;

  my $show_nas    = $attr->{SHOW_NAS}    || 0;
  my $show_users  = $attr->{SHOW_USERS}  || 0;
  my $district_id = $attr->{DISTRICT_ID} || 0;
  
  print "Content-Type: text/html\n\n" if ($FORM{DEBUG});
  
  if (!$district_id) {
    #my $image = '../img/image_not_found.png';
    #$im = GD::Image->newFromPng($image,[1]);
    ##
    $im = new GD::Image(1, 1);
    $white = $im->colorAllocate(255, 255, 255);
    $im->transparent($white);
    $im->interlaced('true');

    print "Content-Type: image/png\n\n";
    binmode STDOUT;
    return $im->png;
  }

  if ( -f '../../Abills/templates/maps/' . $district_id . '.png'
    or -f '../../Abills/templates/maps/' . $district_id . '.jpg'
    or -f '../../Abills/templates/maps/' . $district_id . '.gif')
  {

    if (-f '../../Abills/templates/maps/' . $district_id . '.jpg') {
      $image = '../../Abills/templates/maps/' . $district_id . '.jpg';
      $im = GD::Image->newFromJpeg($image, [1]);
    }
    elsif (-f '../../Abills/templates/maps/' . $district_id . '.png') {
      $image = '../../Abills/templates/maps/' . $district_id . '.png';
      $im = GD::Image->newFromPng($image, [1]);
    }
    elsif (-f '../../Abills/templates/maps/' . $district_id . '.gif') {
      $image = '../../Abills/templates/maps/' . $district_id . '.gif';
      $im    = GD::Image->new($image);
    }

    # All users show builds  ***********************************
    if ($show_users == 1) {
    	if ($FORM{DEBUG} && $FORM{DEBUG} > 6) {
    	  $users->{debug}=1;
    	  $Maps->{debug}=1;
    	}

      my $list = $users->build_list(
        {
          SHOW_MAPS   => '_SHOW',
          DISTRICT_ID => $district_id,
          PAGE_ROWS   => 10000,
          COLS_NAME   => 1
        }
      );

      foreach my $line (@$list) {
        next if($line->{map_x} == 0);

        $poly_border = new GD::Polygon;
        $poly_border->addPt($line->{map_x},  $line->{map_y});
        $poly_border->addPt($line->{map_x2}, $line->{map_y2});
        $poly_border->addPt($line->{map_x3}, $line->{map_y3});
        $poly_border->addPt($line->{map_x4}, $line->{map_y4});

        $im->filledPolygon($poly_border, gdTiled);

        $poly = new GD::Polygon;
        $poly->addPt($line->{map_x}  + 2, $line->{map_y}  + 2);
        $poly->addPt($line->{map_x2} - 2, $line->{map_y2} + 2);
        $poly->addPt($line->{map_x3} - 2, $line->{map_y3} - 2);
        $poly->addPt($line->{map_x4} + 2, $line->{map_y4} - 2);

        $im->filledPolygon($poly, $im->colorAllocate(@{ $map_colors{offline} }));

        #				$im->line($line->[7],$line->[8],$line->[9],$line->[10],gdTiled);
        #				$poly3 = new GD::Polygon;
        #        $poly3->addPt($line->[7]-20,$line->[8]-40);
        #        $poly3->addPt($line->[9],$line->[10]);
        #        $im->filledPolygon($poly3,$im->colorAllocate(@{ $map_colors{inwork} }));
        #			$im->rectangle($line->[7],$line->[8],$line->[11],$line->[12], gdTiled);
      }

      # Online users show builds**********************************

      $list = $Maps->build_online_list(
        {
          DISTRICT_ID => $district_id,
          PAGE_ROWS   => '2000'
        }
      );

      foreach my $line (@$list) {
        $poly = new GD::Polygon;
        $poly->addPt($line->[2] + 2, $line->[3] + 2);
        $poly->addPt($line->[4] - 2, $line->[5] + 2);
        $poly->addPt($line->[6] - 2, $line->[7] - 2);
        $poly->addPt($line->[8] + 2, $line->[9] - 2);

        $im->filledPolygon($poly, $im->colorAllocate(@{ $map_colors{online} }));
      }
    }

    # Show all nas *********************************************
    if ($show_nas == 1) {

      my $list2 = $Nas->list(
        {
          SHOW_MAPS   => '_SHOW',
          DISTRICT_ID => $district_id,
          PAGE_ROWS   => '1000'
        }
      );

      foreach my $line2 (@$list2) {
        $poly2_border = new GD::Polygon;
        $poly2_border->addPt($line2->[15],      $line2->[16]);
        $poly2_border->addPt($line2->[15] - 18, $line2->[16]);
        $poly2_border->addPt($line2->[15] - 9,  $line2->[16] - 12);

        $im->filledPolygon($poly2_border, gdTiled);

        $poly2 = new GD::Polygon;
        $poly2->addPt($line2->[15] - 3,  $line2->[16] - 2);
        $poly2->addPt($line2->[15] - 15, $line2->[16] - 2);
        $poly2->addPt($line2->[15] - 9,  $line2->[16] - 9);

        $im->filledPolygon($poly2, $im->colorAllocate(@{ $map_colors{switch} }));
      }
    }

    print "Content-Type: image/png\n\n";
    binmode STDOUT;

    return $im->png;
  }
  else {
    my $image = '../img/image_not_found.png';
    $im = GD::Image->newFromPng($image, [1]);
    my $red = $im->colorAllocate(255, 0, 0);
    $im->string(GD::Font->Large, 2, 10, "../../Abills/templates/maps/$district_id.png", $red);
    print "Content-Type: image/png\n\n";
    binmode STDOUT;
    return $im->png;
  }

}

#***********************************************************
# menu: Google maps Add
#***********************************************************
sub google_maps_add {
  if ($FORM{message}) {
    $html->message('info', $_INFO, "$FORM{message}");
  }
  if (check_version()) {
    return 0;
  }

  @TYPES = ($_COAXIAL, $_FIBER_OPTIC);
  @TYPES_COLORS = ('#ff0000', '#000000');
  my $line_size    = $conf{MAP_LINE_SIZE} || 7;
  my $line_opacity = $conf{MAP_LINE_OPACITY} || 0.5;

  if ($FORM{change}) {
    $users->build_change("$FORM{LOCATION_ID}", { %FORM, ID => $FORM{LOCATION_ID} });

    if (!$users->{errno}) {
      $html->tpl_show(
        _include('maps_redirect', 'Maps'),
        {
          SECTION => '',
          MESSAGE => "$_CHANGED",
        }
      );
    }

  }
  elsif ($FORM{add}) {
    $users->district_change("$FORM{DISTRICT_ID}", { %FORM, ID => $FORM{DISTRICT_ID} });

    if (!$users->{errno}) {

      $html->tpl_show(
        _include('maps_redirect', 'Maps'),
        {
          SECTION => '',
          MESSAGE => "$_ADDED",
        }
      );
    }
  }
  elsif ($FORM{add_route_info}) {
    $Maps->add_route_info({%FORM});
    if (!$users->{errno}) {

      $html->tpl_show(
        _include('maps_redirect', 'Maps'),
        {
          SECTION => '',
          MESSAGE => "$_ADDED",
        }
      );
    }
  }

  if ($FORM{route} || $FORM{chg_route} || $FORM{chg_route}) { # and $FORM{route} eq 'add' and !$FORM{add_route}) {
    $Maps->{ACTION}     = 'add_route';
    $Maps->{ACTION_LNG} = $_ADD;

    if ($FORM{change_route}) {
      if ($FORM{NAME} ne '') {
        $Maps->route_change({%FORM});
        if (!$Maps->{errno}) {
          $html->tpl_show(
            _include('maps_redirect', 'Maps'),
            {
              SECTION => '&route=add',
              MESSAGE => "$_CHANGED",
            }
          );
        }
      }
      else {
        $Maps->{ACTION}     = 'change_route';
        $Maps->{ACTION_LNG} = $_CHANGE;
        $FORM{chg_route}    = $FORM{ID};
        $html->message('info', $_INFO, "$_FIELDS_FOR_NAME_ARE_REQUIRED");
      }
    }
    elsif ($FORM{chg_route}) {
      $Maps->{ACTION}     = 'change_route';
      $Maps->{ACTION_LNG} = $_CHANGE;

      $Maps->route_info({ ID => $FORM{chg_route} });

      if (!$Maps->{errno}) {
        $html->message('info', $_INFO, "$_CHANGING");
      }
    }

    $Maps->{TYPES} = $html->form_select(
      "TYPES",
      {
        SELECTED     => $Maps->{TYPES},
        SEL_ARRAY    => [@TYPES],
        ARRAY_NUM_ID => 0,
        NO_ID        => 1
      }
    );

    my $list = $Nas->list(
        {
          LOCATION_ID => ">0",
          PAGE_ROWS   => '1000',
          COLS_NAME   => 1
        }
      );

    $Maps->{NAS1_SEL} = $html->form_select(
          'NAS1',
          {
            SELECTED       => $Maps->{NAS1},
            SEL_LIST       => $list,
            SEL_KEY        => 'nas_id',
            SEL_VALUE      => 'nas_name',
            MAIN_MENU      => get_function_index('form_nas'),
            MAIN_MENU_AGRV => "chg=$FORM{NAS_ID}"
          }
        );

    $Maps->{NAS2_SEL} = $html->form_select(
          'NAS2',
          {
            SELECTED       => $Maps->{NAS2},
            SEL_LIST       => $list,
            SEL_KEY        => 'nas_id',
            SEL_VALUE      => 'nas_name',
            MAIN_MENU      => get_function_index('form_nas'),
            MAIN_MENU_AGRV => "chg=$FORM{NAS_ID}"
          }
        );

    $html->tpl_show(_include('google_add_route', 'Maps'), { %$Maps });
  }

  if ($FORM{add_route}) {

    if ($FORM{NAME} ne '') {
      $Maps->add_route({%FORM});
      if (!$Maps->{errno}) {
        $html->tpl_show(
          _include('maps_redirect', 'Maps'),
          {
            SECTION => '&route=add',
            MESSAGE => "$_ADDED",
          }
        );
      }
    }
    else {
      $Maps->{ACTION}     = 'add_route';
      $Maps->{ACTION_LNG} = $_ADD;
      $html->message('info', $_INFO, "$_FIELDS_FOR_NAME_ARE_REQUIRED");
      $FORM{TYPES} = $html->form_select(
        "TYPES",
        {
          SELECTED     => $FORM{TYPES},
          SEL_ARRAY    => [@TYPES],
          ARRAY_NUM_ID => 0,
          NO_ID        => 1
        }
      );
      $html->tpl_show(_include('google_add_route', 'Maps'), { %$Maps, %FORM });
    }
  }
  elsif ($FORM{del_route}) {
    $Maps->del_route({ ID => $FORM{del_route} });
    if (!$Maps->{errno}) {
      $html->tpl_show(
        _include('maps_redirect', 'Maps'),
        {
          SECTION => '&route=add',
          MESSAGE => "$_DELETED",
        }
      );
    }
  }

 if ($FORM{route}
       || $FORM{chg_route} 
       || $FORM{add_route} 
       || $FORM{change_route}) {

    my $table = $html->table(
      {
        width      => '100%',
        caption    => $_ROUTES,
        border     => 1,
        title      => [ $_NAME, $_TYPE, $_DESCRIBE, 'NAS1', 'NAS2', 'NAS1 port', 'NAS2 port', $_LENGTH, '-', '-' ],
        cols_align => [ 'left', 'right', 'right', 'right', 'center', 'center' ],
        pages      => $Maps->{TOTAL}
      }
    );

    $list = $Maps->list_routes({});
    foreach my $line (@$list) {
      $table->addrow(
        $line->[1], 
        $TYPES[ $line->[2] ],
        $line->[3], 
        $line->[4], 
        $line->[5], 
        $line->[6], 
        $line->[7], 
        $line->[8],
        $html->button($_SHOW, "index=$index&chg_route=$line->[0]", { CLASS => 'change' }),
        (defined($permissions{0}{5})) ? $html->button($_DEL, "index=$index&del_route=$line->[0]", { MESSAGE => "$_DEL $line->[1]?", CLASS => 'del' }) : ''
      );
    }
    print $table->show() . $html->br();

  }

  if (defined($FORM{add_wifi})) {

    if ($FORM{RADIUS} ne '' && $FORM{RADIUS} =~ /^\d+$/) {
      $Maps->add_wifi({%FORM});
      if (!$Maps->{errno}) {
        $html->tpl_show(
          _include('maps_redirect', 'Maps'),
          {
            SECTION => '',
            MESSAGE => "$_ADDED",
          }
        );
      }
    }
    else {
      $Maps->{ACTION}     = 'add_wifi';
      $Maps->{ACTION_LNG} = $_ADD;
      $html->message('info', $_INFO, "$_FIELDS_FOR_RADIUS_ARE_REQUIRED");
      $html->tpl_show(_include('google_map_add_wifi', 'Maps'), { %$Maps, %FORM });
    }
  }
  
  if (defined($FORM{add_well})) {

    if ($FORM{NAME} ne '') {
      $Maps->add_well({%FORM});
      if (!$Maps->{errno}) {
        $html->tpl_show(
          _include('maps_redirect', 'Maps'),
          {
            SECTION => '',
            MESSAGE => "$_ADDED",
          }
        );
      }
    }
    else {
      $Maps->{ACTION}     = 'add_well';
      $Maps->{ACTION_LNG} = $_ADD;
      $html->message('info', $_INFO, "$_FIELDS_FOR_NAME_ARE_REQUIRED");
      $html->tpl_show(_include('google_map_add_well', 'Maps'), { %$Maps, %FORM });
    }
  }  

  #-----------google map show --- #
  if (!$FORM{coordx} and !$FORM{add_well} and  !$FORM{DCOORDX} and !$FORM{coordwellx} and !$FORM{route} and !$FORM{add_route} and !$FORM{chg_route} and !$FORM{coordlx} and !$FORM{coordwx} and !$FORM{ !$FORM{coordly} }) {

    $list = $users->district_list({ COLS_NAME => 1 });
    foreach my $line (@$list) {
      if ($line->{zoom} == 0) {
        next;
      }
      $district .=
        "<a style=\"text-decoration:none; font-weight:bold; color:black; \" href=javascript:chgposition("
      . $line->{coordx} . ','
      . $line->{coordy} . ','
      . $line->{zoom}
      . ")>$line->{name}</a>"
      . $html->br()
      . $html->br();

    }

    if (defined($list->[0]->{coordy}) and defined($list->[0]->{zoom})) {
      $mapsetcenter = $list->[0]->{coordx} . ', ' . $list->[0]->{coordy} . ', ' . $list->[0]->{zoom};
    }
    else {
      $mapsetcenter = '';
    }

    #-----------show routes --- #
    $list_routes = $Maps->list_routes({});
    foreach my $line2 (@$list_routes) {
      $list_routes_info = $Maps->list_route_info({ ID => $line2->[0] });

      if (defined($list_routes_info->[0]->[0])) {
        foreach my $line3 (@$list_routes_info) {
          $route_coords_info .= 'new google.maps.LatLng(' . $line3->[3] . ', ' . $line3->[2] . '), ';
        }
        $routes_show .= ' var polyline = new google.maps.Polyline({
				path: [' . $route_coords_info . '], 
				strokeColor: \'' . $TYPES_COLORS[ $line2->[2] ] . '\', 
				strokeOpacity:' . $line_opacity . ',
				strokeWeight:' . $line_size . '});
				
				google.maps.event.addListener(polyline, \'click\', function(event) 
				{ 					
					if (PolyInfoWindow) {
						PolyInfoWindow.close();
					}
					
					if(infowindow) {
						infowindow.close();
					}
					PolyInfoWindow = new google.maps.InfoWindow({});
					PolyInfoWindow.setContent(\'<strong>' 
        . $_NAME
        . '</strong>: '
        . $line2->[1]
        . ' <br /><strong>'
        . $_TYPE
        . '</strong>: '
        . $TYPES[ $line2->[2] ]
        . ' <br /><strong>'
        . NAS1
        . '</strong>: '
        . $line2->[4]
        . '  <br /><strong>'
        . NAS2
        . '</strong>: '
        . $line2->[5]
        . '  <br /><strong> NAS1 port </strong>: '
        . $line2->[6]
        . '<br /><strong>NAS2 port </strong>: '
        . $line2->[7]
        . '<br /><strong>'
        . $_LENGTH
        . '</strong>: '
        . $line2->[8]
        . '<br /><strong>'
        . $_DESCRIBE
        . '</strong>: '
        . $line2->[3]
        . '<br /><br /> \');
    				PolyInfoWindow.position = event.latLng;
					PolyInfoWindow.open(map);
				}); 

				polyline.setMap(map);';
        $route_coords_info = '';
      }

    }
    
    
    my $map_api_key = '';
    if(defined($conf{MAP_API_KEY})) {
    	$map_api_key = 'key='. $conf{MAP_API_KEY} . '&';
    } else {
    	$map_api_key = '';
    }

    #print $routes_show;
    $html->tpl_show(
      _include('google_map_add', 'Maps'),
      {
        DISTRICTS    => $district,
        MAPSETCENTER => $mapsetcenter,
        ROUTES       => $routes_show,
        MAP_API_KEY  => $map_api_key
      }
    );
  }

  #-----------markers info add --- #
  if (defined($FORM{coordx})) {
    $users->{ADDRESS_TPL} = $html->tpl_show(templates('form_address_sel'), $users, { OUTPUT2RETURN => 1 });
    $html->tpl_show(_include('google_maps_add_form', 'Maps'), { %$users, COORDX => $FORM{coordx}, COORDY => $FORM{coordy} });
  }

  #-----------districts info add --- #
  elsif (defined($FORM{DCOORDX})) {

    my $DISTRICT_ID = $users->{DISTRICT_ID} = $html->form_select(
      "DISTRICT_ID",
      {
        SELECTED       => $FORM{DISTRICT_ID},
        SEL_LIST       => $users->district_list({ PAGE_ROWS => 10000, COLS_NAME => 1 }), 
        NO_ID          => 1,
        MAIN_MENU      => get_function_index('form_districts'),
        MAIN_MENU_AGRV => "chg=$FORM{DISTRICT_ID}"
      }
    );

    $html->tpl_show(
      _include('google_map_add_district', 'Maps'),
      {
        DISTRICT_ID => $DISTRICT_ID,
        DCOORDX     => $FORM{DCOORDX},
        DCOORDY     => $FORM{DCOORDY},
        ZOOM        => $FORM{ZOOM}
      }
    );
  }

  #-----------routes info add --- #
  elsif (defined($FORM{coordlx})) {

    my $ROUTE_ID = $users->{ROUTE_ID} = $html->form_select(
      "ROUTE_ID",
      {
        SELECTED          => $FORM{ROUTE_ID},
        SEL_MULTI_ARRAY   => [ @{ $Maps->list_routes({}) } ],
        MULTI_ARRAY_KEY   => 0,
        MULTI_ARRAY_VALUE => 1,
        NO_ID             => 1
      }
    );

    $html->tpl_show(
      _include('google_add_route_info', 'Maps'),
      {
        ROUTE_ID => $ROUTE_ID,
        COORDX   => $FORM{coordlx},
        COORDY   => $FORM{coordly},
      }
    );
  }
  elsif (defined($FORM{coordwx})) {

    $html->tpl_show(
      _include('google_map_add_wifi', 'Maps'),
      {
        DCOORDX => $FORM{coordwx},
        DCOORDY => $FORM{coordwy},
      }
    );
  }
  elsif (defined($FORM{coordwellx})) {

    $html->tpl_show(
      _include('google_map_add_well', 'Maps'),
      {
        DCOORDX => $FORM{coordwellx},
        DCOORDY => $FORM{coordwelly},
      }
    );
  }
}

#***********************************************************
# menu: Google maps show
#***********************************************************
sub google_maps_show {
  my ($attr) = @_;

  if ($FORM{message}) {
    $html->message('info', $_INFO, "$FORM{message}");
  }

  if (check_version()) {
    return 0;
  }

  @TYPES                 = ($_COAXIAL, $_FIBER_OPTIC);
  @TYPES_COLORS          = ('#ff0000',  '#000000');
  @POLYLINE_MARKER_COLOR = ('red_poly', 'black_poly');
  my $line_size          = $conf{MAP_LINE_SIZE} || 7;
  my $line_opacity       = $conf{MAP_LINE_OPACITY} || 0.5;

  if ($FORM{del}) {
    $Maps->del_districts({ ID => $FORM{del} });
    if (!$Maps->{errno}) {
      $html->tpl_show(
        _include('maps_redirect', 'Maps'),
        {
          SECTION => '',
          MESSAGE => "$_DEL_DISTRICT",
        }
      );
    }
  }
  elsif ($FORM{dcoordx} and $FORM{dcoordy}) {
    $Maps->del_build({ DCOORDX => $FORM{dcoordx}, DCOORDY => $FORM{dcoordy} });
    if (!$Maps->{errno}) {
      $html->tpl_show(_include('maps_redirect', 'Maps'),
        {
          SECTION => '',
          MESSAGE => "$_DEL_MARKER",
        }
      );
    }
  }
  # Set filter cookies
  #Get users online  *****************************************
  my $list = $Maps->users_online_list({ PAGE_ROWS => 4000, COLS_NAME => 1 });

  foreach my $line (@$list) {
    push @{ $USERS_ONLINE{ $line->{UID} } }, {
      LOGIN => $line->{LOGIN},
      IP    => $line->{IP},
      UID   => $line->{UID},
    };
  }

  #Get all NAS  **********************************************
  my $list2 = $Maps->nas_list(
    {
      SHOW_MAPS_GOOGLE => 1,
      PAGE_ROWS        => '500'
    }
  );

  if ($Maps->{errno}) {
    $html->message('err', $_ERROR, "[$Maps->{errno}] $err_strs{$Maps->{errno}}");
  }

  my %NAS_INFO = ();
  foreach my $line2 (@$list2) {
    push @{ $NAS_INFO{ $line2->[15] } },
    {
      NAS_X    => $line2->[15],
      NAS_Y    => $line2->[16],
      IP       => $line2->[3],
      NAS_ID   => $line2->[0],
      NAS_NAME => $line2->[1],
      NAS_TYPE => $line2->[4],
    };
  }

  #Get all users  ********************************************
  if($FORM{GID}) {
    $LIST_PARAMS{GID}=$FORM{GID};
  }

  $list = $Maps->all_users_list(
    { 
      %LIST_PARAMS,
      PAGE_ROWS   => '10000',
      COLS_NAME   => 1,
      COLS_UPPER  => 1,
    }
  );

  my %USERS_INFO = ();

  foreach my $line (@$list) {     
    push @{ $USERS_INFO{ $line->{build_id} } }, $line;
  }
    
  $list = $users->build_list({ 
    SHOW_MAPS_GOOGLE => 1,
    COLS_NAME        => 1, 
    PAGE_ROWS        => 10000 });
    
  my $count_online = 0;
  my $total_count  = 0;

  foreach my $line (@$list) {
    my $user_info   = '';
    my $user_online = '';
    
    if ($USERS_INFO{ $line->{id} }) {
      
      LINE: foreach my $u (@{ $USERS_INFO{ $line->{id} } }) {

        if ($u->{ADDRESS_FLAT} ne '') {
          $flat = "$u->{ADDRESS_FLAT}";
        }
        else {
          $flat = '';
        }
      
        if($u->{DEPOSIT} < 0) {
          $u->{DEPOSIT} = "<span class=red_text>" . $u->{DEPOSIT} . "</span>";
        }
        elsif($u->{DEPOSIT} == 0) {
          $u->{DEPOSIT} = "<span class=black_text>" . $u->{DEPOSIT} . "</span>";
        }
        else {
          $u->{DEPOSIT} = "<span class=green_text>" . $u->{DEPOSIT} . "</span>";
        }

        #if (!$admin->{MAX_ROWS} || $admin->{MAX_ROWS} > $total_count) {
          $user_info .= "<tr align=center><td><a class=user_list href=$SELF_URL?index=11&UID=$u->{UID}>$u->{LOGIN}</a></td><td>$u->{DEPOSIT}</td><td>$flat</td></tr>";
          $total_count++;
        #}

        #$user_info .= "<strong><a href=$SELF_URL?index=11&UID=$u->{UID}>$u->{LOGIN}</a></strong> $_FLAT: $u->{ADDRESS_FLAT} $_DEPOSIT: $u->{DEPOSIT}<br>";
        if ($USERS_ONLINE{ $u->{UID} }) {
          foreach my $uo (@{ $USERS_ONLINE{ $u->{UID} } }) {
            $count_online++;
            $user_online .= "<tr align=center><td><a href=$SELF_URL?index=11&UID=$uo->{UID}>$uo->{LOGIN}</a></td><td>$uo->{IP} </td></tr>";
          }
        }
#        if ($INSTALLATIONS_INFO{ $line->[6] }) {
#          foreach my $install (@{ $INSTALLATIONS_INFO{ $line->[6] } }) {
#            $install_info .= "$install->{NAME} $install->{COUNT}";
#          }
#        }
      }
    }
    else {
      $user_info    = "";
      $user_online  = "";
      $install_info = "";
    }

    $count_offline = $#{ $USERS_INFO{ $line->{id} } } + 1;

    #***********************************************************
    # template 	(maps_location_info)   +++DISTRICT_ID => $attr->{DISTRICT_ID},
    #***********************************************************
    #%ufilter = $html->getCookies();
 
  if($count_online > 0) {
    $sub_online = 1;
  }
  
  if($FORM{UFILTER} == 1) {
    $user_info = '';
    $count_offline = ''
  }
  elsif($FORM{UFILTER} == 2) {
    $count_online = '';
    $user_online = '';
  } 


    $tpl_obj .= $html->tpl_show(
      _include('google_location_info', 'Maps'),
      {
        STREET_ID          => $line->{street_name},
        NUMBER             => $line->{number},
        MAP_X              => $line->{coordx},
        MAP_Y              => $line->{coordy},
        USER_OFFLINE       => $user_info,
        USERS_ONLINE       => $user_online,
        USER_COUNT_OFFLINE => $count_offline,
        USER_COUNT_ONLINE  => $count_online,
        SUB_ONLINE         => $sub_online,
        BUILD_ID           => $line->{id}

      },
      { OUTPUT2RETURN => 1 }
    );
    $count_online = 0;
    $total_count  = 0;

    # Template switch info and param  ***************************

    if ($NAS_INFO{ $line->{coordx} }) {
      foreach my $nas (@{ $NAS_INFO{ $line->{coordx} } }) {
        $nas_info .=
"<strong style=font-size:9px; color:green;>$_NAS:</strong><br /><br /><strong>IP:</strong> $nas->{IP}<br /><strong>$_NAME:</strong> $nas->{NAS_NAME}<br /><strong>$_TYPE:</strong> $nas->{NAS_TYPE}<br />";
      }

      $tpl_obj_nas .= $html->tpl_show(
        _include('google_nas_info', 'Maps'),
        {
          MAP_NAS_X  => $line->{coordx} + 0.0001,
          MAP_NAS_Y  => $line->{coordy} + 0.0001,
          MAP_NAS_X2 => $line->{coordx} - 9,
          MAP_NAS_Y2 => $line->{coordy} - 12,
          MAP_NAS_X3 => $line->{coordx} + 9,
          MAP_NAS_Y3 => $line->{coordy} - 12,
          NAS_INFO   => $nas_info
        },
        { OUTPUT2RETURN => 1 }
      );

    }
    $nas_info = '';
  }

  #***********************************************************
  # template 	(maps_show_map)
  #***********************************************************
  $list = $users->district_list({ COLS_NAME   => 1, });
  my $district = '<table>';
  foreach my $line (@$list) {
    if ($line->{zoom} == 0) {
      next;
    }
    $deldistrict = (defined($permissions{0}{5})) ? $html->button($_DEL, "index=$index&del=$line->{id}", { MESSAGE => "$_DEL $line->{name}?", CLASS => "del" }) : '';
    $district .=
      "<tr><td><a style=\"text-decoration:none; font-weight:bold; color:black; \" href=javascript:chgposition("
    . $line->{coordx} . ','
    . $line->{coordy} . ','
    . $line->{zoom}
    . ")>$line->{name}</a></td><td>"
    . $deldistrict
    . '</td></tr>';

  }
  $district .= '</table>';
  
  if($FORM{show_build}) {
    
    my %buids_arr = ();
    $list = $users->build_list({
      COLS_NAME         => 1,
      SHOW_MAPS_GOOGLE  => 1,
      PAGE_ROWS         => 10000
      });
        
    foreach $line (@$list)  {
      $buids_arr{ $line->{id} } = "$line->{coordx}, $line->{coordy}, 16";
    }
    
    if($buids_arr{$FORM{show_build}}) {
      $mapsetcenter = $buids_arr{$FORM{show_build}};
      $show_build = $FORM{show_build};  
    } 
    else {
      $show_build = '';
      $mapsetcenter = '';
      print '<p style=\'color:red; font-weight:bold;\'>' . $_BUILD_NOT_FOUND. '</p>' 
    }  
  }
  
  elsif (defined($list->[0]->{coordy}) and defined($list->[0]->{zoom})) {
    $mapsetcenter = $list->[0]->{coordx} . ', ' . $list->[0]->{coordy} . ', ' . $list->[0]->{zoom};
  }
  else {
    $mapsetcenter = '';
  }

  #-----------show routes --- #
  my $routes_markers = '';
  my $route_info     = "";
  $list_routes = $Maps->list_routes({});
  foreach my $line2 (@$list_routes) {
    $list_routes_info = $Maps->list_route_info({ ID => $line2->[0] });

    if (defined($list_routes_info->[0]->[0])) {
      $route_info =
"<strong>$_NAME</strong>: $line2->[1]<br /><strong>$_TYPE</strong>: $TYPES[ $line2->[2] ]<br /><strong>NAS1</strong>: $line2->[4]<br /><strong>NAS2</strong>: $line2->[5]<br /><strong> NAS1 port </strong>: $line2->[6]<br /><strong>NAS2 port </strong>: $line2->[7]<br /><strong>$_LENGTH</strong>: $line2->[8]<br /><strong>$_DESCRIBE</strong>: $line2->[3]<br /><br />";
      foreach my $line3 (@$list_routes_info) {
        $routes_markers .= "createMarker(new google.maps.LatLng($line3->[3], $line3->[2]), '" . $route_info . "', '" . $POLYLINE_MARKER_COLOR[ $line2->[2] ] . "' , 'Poliline'); 
      	  ";
        $route_coords_info .= 'new google.maps.LatLng(' . $line3->[3] . ', ' . $line3->[2] . '), ';
      }
      $routes_show .= $routes_markers . '
         var polyline = new google.maps.Polyline({
				path: [' . $route_coords_info . '], 
				strokeColor: \'' . $TYPES_COLORS[ $line2->[2] ] . '\', 
				strokeOpacity:' . $line_opacity . ',
				strokeWeight:' . $line_size . '});
				
				google.maps.event.addListener(polyline, \'click\', function(event) 
				{ 					
					if (PolyInfoWindow) {
						PolyInfoWindow.close();
					}
					
					if(infowindow) {
						infowindow.close();
					}
					PolyInfoWindow = new google.maps.InfoWindow({});
					PolyInfoWindow.setContent(\'' . $route_info . '\');
    				PolyInfoWindow.position = event.latLng;
					PolyInfoWindow.open(map);
				}); 

				polyline.setMap(map);';
      $route_coords_info = '';
      $route_info        = '';
    }

  }

  # LIST WIFI ZONES ---------------
  $list_wifi = $Maps->list_wifi({});

  if ($list_wifi->[0]->[0]) {
    foreach my $wifi (@$list_wifi) {
      $wifi_info .= "var latlng = new google.maps.LatLng($wifi->[3], $wifi->[2]);
	             var circle = new google.maps.Circle({
			     	map: map,
			     	radius: $wifi->[1]
			     });
     			circle.bindTo('center', createMarker(latlng, '<strong>$_WIFI_RADIUS</strong>: $wifi->[1]$_METERS_SHORT', 'wifi' , 'WiFi'), 'position');

	        ";
    }
  }
  
  # LIST WELLS ---------------
  $list_wells = $Maps->list_wells({});

  if ($list_wells->[0]->[0]) {
    foreach my $well (@$list_wells) {
      $well_info .= "createMarker(new google.maps.LatLng($well->[3], $well->[2]), '<strong>$_NAME</strong>: $well->[1] <br><strong>$_DESCRIBE</strong>: $well->[4]', 'well' , 'Колодец');
";
    }
  }  

# -------- KEY FOR GOOGLE MAP 
    my $map_api_key = '';
    if(defined($conf{MAP_API_KEY})) {
    	$map_api_key = 'key='. $conf{MAP_API_KEY} . '&';
    } else {
    	$map_api_key = '';
    }  

    $user_filter = $html->form_select("UFILTER", {
      SELECTED     => $FORM{UFILTER} || 0,
      SEL_ARRAY    => [$_ALL, $_ONLY_ONLINE, $_ONLY_OFFLINE],
      ARRAY_NUM_ID => 0,
      NO_ID        => 1
    });
  

  $html->tpl_show(
    _include('google_map_show', 'Maps'),
    {
      OBJECTS      => $tpl_obj,
      NAS          => $tpl_obj_nas,
      DISTRICT_ID  => $attr->{DISTRICT_ID},
      SHOW_NAS     => $attr->{SHOW_NAS},
      SHOW_USERS   => $attr->{SHOW_USERS},
      DISTRICTS    => $district,
      DELDISTRICT  => $del_district,
      MAPSETCENTER => $mapsetcenter,
      ROUTES       => $routes_show,
      WIFI         => $wifi_info,
      WELL         => $well_info,
      MAP_API_KEY  => $map_api_key,
      SHOW_BUILD   => $show_build,
      GROUP_SEL    => sel_groups(),
      UFILTER      => $user_filter,
    }
  );

}

#***********************************************************
# menu: Google map show client
# Функция для формы заявки на подключение (отображает на карте дома для возможного подключения)
#***********************************************************
sub google_maps_show_client {
  my ($attr) = @_;

  if ($FORM{message}) {
    $html->message('info', $_INFO, "$FORM{message}");
  }

  if (check_version()) {
    return 0;
  }
  
  #Get builds (javascript)  **********************************
  $list = $users->build_list({ SHOW_MAPS_GOOGLE => 1, 
  	                           PAGE_ROWS        => '100000',
  	                           COLS_NAME        => 1 });

  if ($Maps->{errno}) {
    $html->message('err', $_ERROR, "[$Maps->{errno}] $err_strs{$Maps->{errno}}");
  }

  foreach my $line (@$list) {
    $tpl_obj .= $html->tpl_show(
      _include('google_location_info_client', 'Maps'),
      {
        STREET_ID => $line->{street_name},
        NUMBER    => $line->{number},
        MAP_X     => $line->{coordx},
        MAP_Y     => $line->{coordy},
      },
      { OUTPUT2RETURN => 1 }
    );
  }

  #***********************************************************
  # template 	(maps_show_map)
  $list = $users->district_list({ COLS_NAME => 1 });

  if ($Maps->{errno}) {
    $html->message('err', $_ERROR, "[$Maps->{errno}] $err_strs{$Maps->{errno}}");
  }

  foreach my $line (@$list) {
    if ($line->{zoom} == 0) {
      next;
    }
    $district .= $html->button(
      $line->{name},
      '',
      {
        JAVASCRIPT => "javascript:chgposition(" . $line->{coordx} . ',' . $line->{coordy} . ',' . $line->{zoom} . ")",
        ex_params  => "style=\"text-decoration:none; font-weight:bold; color:black; \""
      }
    )
    . $html->br()
    . $html->br();

    #"<a style=\"text-decoration:none; font-weight:bold; color:black; \" href=javascript:chgposition(". $line->[5] . ',' . $line->[6]. ',' . $line->[7]. ")>$line->[1]</a>";
  }

  if (defined($list->[0]->{coordy}) and defined($list->[0]->{zoom})) {
    $mapsetcenter = $list->[0]->{coordx} . ', ' . $list->[0]->{coordy} . ', ' . $list->[0]->{zoom};
  }
  else {
    $mapsetcenter = '';
  }

  my $return = $html->tpl_show(
    _include('google_map_show_client', 'Maps'),
    {
      OBJECTS      => $tpl_obj,
      NAS          => $tpl_obj_nas,
      DISTRICT_ID  => $attr->{DISTRICT_ID},
      SHOW_NAS     => $attr->{SHOW_NAS},
      SHOW_USERS   => $attr->{SHOW_USERS},
      DISTRICTS    => $district,
      MAPSETCENTER => $mapsetcenter,
      %$attr
    },
    {%$attr}
  );

  return $return;
}

#***************************************************************
#
#***************************************************************
sub d {
  my ($attr) = @_;
  
  use Data::Dumper;
  print "<pre>";
  print Dumper($attr);
  print "</pre>";    #print $list;  
}


1
