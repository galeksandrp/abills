# Ashield
#

use LWP::UserAgent;
use HTTP::Request::Common;
#use MIME::Base64;

my $ua = new LWP::UserAgent();

use Abills::Base;
use Ashield;
use Fees;


my $Ashield = Ashield->new($db, $admin, \%conf);
my $Tariffs = Tariffs->new($db, \%conf, $admin);
my $fees    = Fees->new($db, $admin, \%conf);


my $debug = 0;
my @service_status_colors = ("$_COLORS[9]", "$_COLORS[6]");
my @service_status = ( "$_ENABLE", "$_DISABLE");

#1. Оформление новой подписки.
#2. Смена тарифного плана.
#3. Возобновление подписки.
#4. Активация блокировки.
#5. Отказ от услуги.


#**********************************************************
# Tarif plans
# form_tp
#**********************************************************
sub ashield_tp {
 my $tarif_info;
 my @Payment_Types    = ($_PREPAID, $_POSTPAID); 
 $tarif_info = $Tariffs->defaults();
 $tarif_info->{LNG_ACTION}=$_ADD;
 $tarif_info->{ACTION}='ADD_TP';

if($FORM{ADD_TP}) {
  $FORM{TP_ID} = $FORM{CHG_TP_ID};
  $Tariffs->add( { %FORM, MODULE => 'Ashield' });
  if (! $Tariffs->{errno}) {
    $html->message('info', $_ADDED, "$_ADDED $Tariffs->{TP_ID}");
    if ($FORM{DR_WEB_GROUP}) {
    	 $FORM{add}        = 1;
       $FORM{ID}         = 'ashield_'.$Tariffs->{TP_ID};
       $FORM{NAME}       = "Tariff Plan: $Tariffs->{TP_ID}";
       $FORM{DESCRIPTION}= "Ashield Group for TP: $Tariffs->{TP_ID}";
       ashield_drweb_groups();    	
     }
   }
 }
elsif ($FORM{TP_ID}) {
  $tarif_info = $Tariffs->info( $FORM{TP_ID} );

  if ($Tariffs->{errno}) {
    $html->message('err', $_ERROR, "[$Tariffs->{errno}] $err_strs{$Tariffs->{errno}}");	
    return 0;
   }

  $pages_qs .= "&TP_ID=$FORM{TP_ID}&subf=$FORM{subf}";
  $LIST_PARAMS{TP} = $FORM{TP_ID};
  %F_ARGS = ( TP => $Tariffs );
  
  $Tariffs->{NAME_SEL} = $html->form_main({ CONTENT => $html->form_select('TP_ID', 
                                          { 
 	                                          SELECTED          => $FORM{TP_ID},
 	                                          SEL_MULTI_ARRAY   => $Tariffs->list({ %LIST_PARAMS, MODULE => 'Ashield' }),
 	                                          MULTI_ARRAY_KEY   => 18,
 	                                          MULTI_ARRAY_VALUE => '0,1',
 	                                          NO_ID             => 1
 	                                        }),
	                                          HIDDEN  => { index => "$index" },
	                                          SUBMIT  => { show  => "$_SHOW" } 
	                        });
  func_menu({ 
  	         'ID' =>   $Tariffs->{TP_ID}, 
  	         $_NAME => $Tariffs->{NAME_SEL}
  	       }, 
  	{ 
  	 },
  	{
  		f_args => { %F_ARGS }
  	 });

  if ($FORM{subf}) {

  	return 0;
   }
  elsif($FORM{change}) {
    $Tariffs->change( $FORM{TP_ID}, { %FORM, MODULE => 'Ashield'  } );  
    if (! $Tariffs->{errno}) {
       $html->message('info', $_CHANGED, "$_CHANGED $Tariffs->{TP_ID}");
       if ($FORM{DR_WEB_GROUP}) {
      	 $FORM{add}        = 1;
         $FORM{ID}         = 'ashield_'.$FORM{TP_ID};
         $FORM{NAME}       = "Tariff Plan: $FORM{TP_ID}";
         $FORM{DESCRIPTION}= "Ashield Group for TP: $FORM{TP_ID}";
         ashield_drweb_groups();    	
        }
     }
   }

  $FORM{info}="ashield_".$tarif_info->{TP_ID};
  if (ashield_drweb_groups()) {
    $tarif_info->{DR_WEB_GROUP}    = 'checked'; 
   }
  $tarif_info->{LNG_ACTION}=$_CHANGE;
  $tarif_info->{ACTION}='change';
 }
elsif(defined($FORM{del}) && $FORM{is_js_confirmed}) {
  $Tariffs->del($FORM{del});
  if (! $Tariffs->{errno}) {
    $html->message('info', $_DELETE, "$_DELETED $FORM{del}");
   }
}

if ($Tariffs->{errno}) {
    $html->message('err', $_ERROR, "[$Tariffs->{errno}] $err_strs{$Tariffs->{errno}}");	
 }

$tarif_info->{PAYMENT_TYPE_SEL} = $html->form_select('PAYMENT_TYPE', 
                                          { 
 	                                          SELECTED     => $tarif_info->{PAYMENT_TYPE},
 	                                          SEL_ARRAY    => \@Payment_Types,
 	                                          ARRAY_NUM_ID => 1
 	                                        });

$tarif_info->{GROUPS_SEL} = $html->form_select('TP_GID', 
                                          { 
 	                                          SELECTED          => $tarif_info->{TP_GID},
 	                                          SEL_MULTI_ARRAY   => [[ '', ''],  @{ $Tariffs->tp_group_list( ) } ],
 	                                          MULTI_ARRAY_KEY   => 0,
 	                                          MULTI_ARRAY_VALUE => 1,
 	                                        });

$tarif_info->{REDUCTION_FEE}   = ($tarif_info->{REDUCTION_FEE})    ? 'checked' : '';
$tarif_info->{POSTPAID_FEE}    = ($tarif_info->{POSTPAID_FEE})     ? 'checked' : '';
$tarif_info->{PERIOD_ALIGNMENT}= ($tarif_info->{PERIOD_ALIGNMENT}) ? 'checked' : ''; 

#Check group in Dr Wb
#if ($conf{EXT_BILL_ACCOUNT}) {
#  my $checked = ($tarif_info->{EXT_BILL_ACCOUNT}) ? ' checked' : '';
#  $tarif_info->{EXT_BILL_ACCOUNT}="<tr><td>$_EXTRA $_BILL:</td><td><input type='checkbox' name='EXT_BILL_ACCOUNT' value='1' $checked></td></tr>\n";
#}


$html->tpl_show(_include('ashield_tp', 'Ashield'), $tarif_info);

my $list = $Tariffs->list({ %LIST_PARAMS, MODULE => 'Ashield' });	
my $table = $html->table( { width       => '100%',
                            caption     => "$_TARIF_PLANS",
                            border      => 1,
                            title_plain => ['#', $_NAME, $_PAYMENT_TYPE, $_DAY_FEE, $_MONTH_FEE,                              $_AGE, $_GROUP, '-', '-' ],
                            cols_align  => ['right', 'left', 'center', 'center', 'center', 'right', 'right', 'right', 'right', 'center:noprint', 'center:noprint', 'center:noprint'],
                            ID          => 'ASHIELD_TARIF_PLANS'
                                  } );

my ($delete, $change);
foreach my $line (@$list) {
  if ($permissions{4}{1}) {
    $delete = $html->button($_DEL, "index=$index&del=$line->[18]", { MESSAGE => "$_DEL $line->[0]?" }); 
    $change = $html->button($_CHANGE, "index=$index&TP_ID=$line->[18]");
   }
  
  if($FORM{TP_ID} eq $line->[0]) {
  	$table->{rowcolor}=$_COLORS[0];
   }
  else {
  	undef($table->{rowcolor});
   }
  
  $table->addrow($html->b($line->[0]), 
   $html->button($line->[1], "index=$index&TP_ID=$line->[18]"),
   $Payment_Types[$line->[4]], 
   $line->[5], 
   $line->[6], 
   $line->[7], 
   $line->[9], 
   $change,
   $delete);
}

print $table->show();
$table = $html->table( { width      => '100%',
                         cols_align => ['right', 'right'],
                         rows       => [ [ "$_TOTAL:", $html->b($Tariffs->{TOTAL}) ] ]
                     } );
print $table->show();
}

##**********************************************************
##
##**********************************************************
#sub ashield_tp {
# my ($attr) = @_;
# 
# my $tarif_info;
# my @Payment_Types    = ($_PREPAID, $_POSTPAID); 
# $tarif_info = $Ashield->defaults();
# $Ashield->{LNG_ACTION}=$_ADD;
# $Ashield->{ACTION}='ADD_TP';
#
#if($FORM{ADD_TP}) {
#  $Ashield->tp_add( { %FORM, MODULE => 'Ashield' });
#  if (! $Ashield->{errno}) {
#    $html->message('info', $_ADDED, "$_ADDED $Ashield->{TP_ID}");
#    
#    if ($FORM{CREATE_DR_WEB_GROUP}) {
#       $FORM{ID}='ashield'.$Ashield->{INSERT_ID};
#       $FORM{NAME}="$FORM{NAME}";
#       $FORM{DESCRIPTION}="Ashield Group for TP: $Ashield->{INSERT_ID}";
#       ashield_drweb_groups();    	
#      }
#   }
# }
#elsif ($FORM{TP_ID}) {
#  $Ashield->tp_info( $FORM{TP_ID} );
#
#  if ($Ashield->{errno}) {
#    $html->message('err', $_ERROR, "[$Ashield->{errno}] $err_strs{$Ashield->{errno}}");	
#    return 0;
#   }
#
#  $pages_qs .= "&TP_ID=$FORM{TP_ID}&subf=$FORM{subf}";
#  $LIST_PARAMS{TP} = $FORM{TP_ID};
#  %F_ARGS = ( TP => $Tariffs );
#  
#  $Ashield->{NAME_SEL} = $html->form_main({ CONTENT => $html->form_select('TP_ID', 
#                                          { 
# 	                                          SELECTED          => $FORM{TP_ID},
# 	                                          SEL_MULTI_ARRAY   => $Ashield->tp_list({ %LIST_PARAMS, MODULE => 'Ashield' }),
# 	                                          MULTI_ARRAY_KEY   => 0,
# 	                                          MULTI_ARRAY_VALUE => 1,
# 	                                        }),
#	                                          HIDDEN  => { index => "$index" },
#	                                          SUBMIT  => { show  => "$_SHOW" } 
#	                        });
#  
#  func_menu({ 
#  	         'ID' =>   $Ashield->{TP_ID}, 
#  	         $_NAME => $Ashield->{NAME_SEL}
#  	       }, 
#  	{ 
#  	 },
#  	{
#  		f_args => { %F_ARGS }
#  	 });
#
#  if ($FORM{subf}) {
#
#  	return 0;
#   }
#  elsif($FORM{change}) {
#    $Ashield->tp_change({ %FORM, MODULE => 'Ashield'  });  
#    if (! $Ashield->{errno}) {
#       $html->message('info', $_CHANGED, "$_CHANGED $Ashield->{TP_ID}");
#     }
#   }
#  $Ashield->{LNG_ACTION}=$_CHANGE;
#  $Ashield->{ACTION}='change';
# }
#elsif(defined($FORM{del}) && $FORM{is_js_confirmed}) {
#  $Ashield->tp_del({ ID => $FORM{del} });
#  if (! $Ashield->{errno}) {
#    $html->message('info', $_DELETE, "$_DELETED $FORM{del}");
#   }
#}
#
#if ($Ashield->{errno}) {
#    $html->message('err', $_ERROR, "[$Ashield->{errno}] $err_strs{$Ashield->{errno}}");	
# }
#
#$Ashield->{PAYMENT_TYPE_SEL} = $html->form_select('PAYMENT_TYPE', 
#                                          { 
# 	                                          SELECTED     => $Ashield->{PAYMENT_TYPE},
# 	                                          SEL_ARRAY    => \@Payment_Types,
# 	                                          ARRAY_NUM_ID => 1
# 	                                        });
#
# $Ashield->{TP_ACCESS_TYPE_SEL} = $html->form_select('TP_ACCESS_TYPE', 
#                                          { 
# 	                                          SELECTED     => $Ashield->{TP_ACCESS_TYPE},
# 	                                          SEL_ARRAY    => [$_PUBLIC, $_PRIVATE],
# 	                                          ARRAY_NUM_ID => 1
# 	                                        });
#
#$html->tpl_show(_include('ashield_tp', 'Ashield'), $Ashield);
#my $list = $Ashield->tp_list({ %LIST_PARAMS, MODULE => 'Ashield' });	
#my $table = $html->table({ width      => '100%',
#                           caption    => "$_TARIF_PLANS",
#                           border     => 1,
#                           title      => ['#', $_NAME,  $_DAY_FEE, $_MONTH_FEE,  $_PAYMENT_TYPE, '-', '-'],
#                           cols_align => ['right', 'left', 'right', 'right', 'left', 'center:noprint', 'center:noprint', 'center:noprint'],
#                           ID         => 'ASHIELD_TARIF_PLANS'
#                         });
#
#my ($delete, $change);
#foreach my $line (@$list) {
#  if ($permissions{4}{1}) {
#    $delete = $html->button($_DEL, "index=$index&del=$line->[0]", { MESSAGE => "$_DEL $line->[0]?" }); 
#    $change = $html->button($_CHANGE, "index=$index&TP_ID=$line->[0]");
#   }
#
#  if($FORM{TP_ID} eq $line->[0]) {
#  	$table->{rowcolor}=$_COLORS[0];
#   }
#  else {
#  	undef($table->{rowcolor});
#   }
#  
#  $table->addrow($html->b($line->[0]), 
#   $line->[1],
#   $line->[2],
#   $line->[3],
#   $Payment_Types[$line->[4]], 
#   $change,
#   $delete);
#}
#
#print $table->show();
#
#$table = $html->table( { width      => '100%',
#                         cols_align => ['right', 'right'],
#                         rows       => [ [ "$_TOTAL:", $html->b($Ashield->{TOTAL}) ] ]
#                     } );
#print $table->show();
#
#
#}



#**********************************************************
#
#**********************************************************
sub ashield_user {
 	my ($attr) = @_;

  my $users = Users->new($db, $admin, \%conf); 
 	$Ashield->{UID}=$FORM{UID};	  
  $users->info($LIST_PARAMS{UID}, { SHOW_PASSWORD => 1 });
  $users->pi({ ID => $users->{UID} });
  $Ashield->{EMAIL}=($users->{EMAIL}) ? $users->{EMAIL} .$html->form_input('EMAIL', "$users->{EMAIL}", { TYPE => 'hidden', OUTPUT2RETURN => 1 }) : $html->form_input('EMAIL', '', { OUTPUT2RETURN => 1 });

  my %subscribe_state = (
  1 => $_STATUS_1,
  2 => $_STATUS_2,
  3 => $_STATUS_3,
  4 => $_STATUS_4,
  5 => $_STATUS_5);

  if ($FORM{add}) {
  	if ($users->{DEPOSIT}+$users->{CREDIT} < 0) {
  		$html->message('err', $_ERROR, "$ERR_SMALL_DEPOSIT");
  	 }
    if ($FORM{EMAIL} !~ /(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))/) {
    	$html->message('err', $_ERROR, "$_WRONG_EMAIL");
     }
  	else {
    	$Ashield->{ACTIVATE}='0000-00-00'; #$attr->{USER}->{ACTIVATE};
      if (! $FORM{STATUS}) {
        #ashield_get_month_fee($Ashield);
        #ashield_drweb_user();
        my ($fio1, $fio2)=split(/ /, $users->{FIO}, 2);
        
        my $result_hash=ashield_drweb_request('interfaces/user_registration.php', {
      	  login      => "$users->{LOGIN}",
      	  name       => $fio2 || '-',
      	  lastname   => $fio1 || '-',
      	  password   => "$users->{PASSWORD}",
      	  email      => $FORM{EMAIL} || '-',
      	  contract   => "$users->{CONTRACT_ID}",
      	  checkword  => $conf{ASHIELD_DRWEB_CABINET_PASSWD}
      	  },
      	  { SERVER_ADDR    => "$conf{ASHIELD_DRWEB_CABINET_HOST}",
      	  	});
      	
  	    if ($result_hash->{error}) {
  	    	my %dr_web_errors = ( 6 => $ERR_WRONG_PASSWD,
  	    	                     18 => "$_LOGIN - $_EXIST",
  	    	                     20 => "'$FORM{EMAIL}' $_WRONG_EMAIL",
  	    	                     
  	    	                     );
  	    	
  	    	
  	    	my $message = '';
  	    	if ($dr_web_errors{$result_hash->{error}->[0]->{code}->[0]}) {
  	    		$message = $dr_web_errors{$result_hash->{error}->[0]->{code}->[0]};
  	    		if ($result_hash->{error}->[0]->{code}->[0] == 18) {
  	    			$Ashield->user_add({ %FORM, UID => $LIST_PARAMS{UID} });
  	    		 }
  	    	 }
  	    	else {
  	    		$message = "$result_hash->{error}->[0]->{message}->[0]";
  	    	 }
          $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $message");
         }
        else {        	
          $html->message('info', $_INFO, "Dr.Web: $_USER $_ADDED");
          $Ashield->user_add({ %FORM, UID => $LIST_PARAMS{UID} });
         }
       }
      #$html->message('info', $_INFO, "$_ADDED");	
    }
   }
	elsif($FORM{set}) {
    $Ashield->user_change({ %FORM });
    if (! $Ashield->{errno}) {
    	$Ashield->{ACTIVATE}='0000-00-00'; #$attr->{USER}->{ACTIVATE};
      #ashield_get_month_fee($Ashield) if (! $FORM{STATUS});
      $html->message('info', $_INFO, "$_CHANGED");	
     }
   }
	elsif($FORM{del} && $FORM{is_js_confirmed}) {
    $Ashield->user_del();
    if (! $Ashield->{errno}) {
      $html->message('info', $_INFO, "$_CHANGED");	
     }
	 }

  if ($Ashield->{errno}) {
    if ($Ashield->{errno} == 15) {
    	$html->message('err', $_ERROR, "$ERR_SMALL_DEPOSIT");
     }
    else {
      $html->message('err', $_ERROR, "[$Ashield->{errno}] $err_strs{$Ashield->{errno}}");
     }
   }
  my $user = $Ashield->user_info($LIST_PARAMS{UID});
  if($user->{TOTAL} < 1) {
	  $html->message('info', $_INFO, $_NOT_ACTIVE);
	  $user              = $Ashield->defaults();
	  $user->{ACTION}    = 'add';
	  $user->{LNG_ACTION}= $_ACTIVATE;
    $user->{TP_ID}=$html->form_select('TP_ID', 
                                         { 
 	                                          SELECTED          => $user->{TP_ID},
 	                                          SEL_MULTI_ARRAY   => $Tariffs->list({ MODULE => 'Ashield'}),
 	                                          MULTI_ARRAY_KEY   => 18,
 	                                          MULTI_ARRAY_VALUE => '0,1',
 	                                          NO_ID             => 1
 	                                        });
	 }
	else {
	  #$user->{ACTION}          = 'set';
	  #$user->{LNG_ACTION}      = $_CHANGE;
    #$user->{CHANGE_TP_BUTTON}= $html->button($_CHANGE, 'UID='. $FORM{UID}.'&index='. ($index + 1), { BUTTON => 1 });
    
    $Ashield->{STATUS}=$service_status[$Ashield->{STATUS}];
    
    my $result_hash=ashield_drweb_request('interfaces/user_info.php', {
      	  login      => "$users->{LOGIN}",
      	  checkword  => $conf{ASHIELD_DRWEB_CABINET_PASSWD}
      	  },
      	  { SERVER_ADDR    => "$conf{ASHIELD_DRWEB_CABINET_HOST}",
      	  	});

    while(my($k, $v) = each %{ $result_hash->{user}->[0] }) {
      $Ashield->{$k}=( ref $v->[0] eq 'HASH' ) ? %{ $v->[0] }.' ' : convert($v->[0], { utf82win => 1 });
     }

    $html->tpl_show(_include('ashield_client_info', 'Ashield'), $Ashield);
    $result_hash=ashield_drweb_request('interfaces/user_agents.php', {
      	  login      => "$users->{LOGIN}",
      	  checkword  => $conf{ASHIELD_DRWEB_CABINET_PASSWD}
      	  },
      	  { SERVER_ADDR    => "$conf{ASHIELD_DRWEB_CABINET_HOST}",
      	  	});

  	$table = $html->table( { width      => '100%',
  		                       caption    => "$_AGENTS",
  		                       title_plain=> ["$_COMP_NAME", "$_TARIF_PLAN", 
  		                       "$_ACTIVATE", "Online",
  		                       "$_CREATED", "$_CHANGED", "URL"],
                             cols_align => ['left', 'left'],
                            });

    foreach my $k (@{ $result_hash->{agents}->[0]->{agent} }) {
    	my $result_hash2 = ashield_drweb_request('api/2.0/get-customer-info.ds', { id => $k->{uuid}->[0] }); 

      $result_hash2->{customers}->[0]->{customer}->[0]->{createdtime}->[0] =~ /(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/;
      my $create = "$1-$2-$3 $4:$5:$6";
    	$result_hash2->{customers}->[0]->{customer}->[0]->{modifiedtime}->[0]=~ /(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/;
    	my $changed = "$1-$2-$3 $4:$5:$6";
      my $activated	= $result_hash2->{customers}->[0]->{customer}->[0]->{activated}->[0];
      my $online	= $result_hash2->{customers}->[0]->{customer}->[0]->{online}->[0];
    	
    	my $name = $result_hash2->{customers}->[0]->{customer}->[0]->{name}->[0] || $k->{uuid}->[0];
    	
    	$table->addrow($name,
#    	               $k->{agentuuid}->[0], 
    	               $k->{tariffplancode}->[0],
    	               ($activated eq 'no') ? $_NO: $_YES,
                     ($online eq 'no') ? $_NO : $_YES,
    	               $create,
    	               $changed,
    	               $html->button("$_DOWNLOAD", '', { 
    	               	  GLOBAL_URL => "$result_hash2->{customers}->[0]->{customer}->[0]->{url}->[0]", 
    	                  TITLE      => "$result_hash2->{customers}->[0]->{customer}->[0]->{url}->[0]" 
    	                  })
    	              );
     }
    print $table->show();


    my $list =  $Ashield->ashield_avd_list({ %LIST_PARAMS  });
  	$table = $html->table({ width      => '100%',
  		                      caption    => "$_LOG",
  		                      title_plain=> ["$_LOGIN", "$_STETE", "$_AGENT ID",
  		                      "$_GROUP ID", "$_GROUP $_NAME", "$_TARIF_PLAN", "$_DATE"],
                            cols_align => ['left', 'left'],
                            pages      => $Ashield->{TOTAL}
                          });
 
 
    foreach my $line (@$list) {
    	$table->addrow($html->button("$line->[0]", "index=15&UID=$line->[8]"), 
    	               $subscribe_state{$line->[1]},
    	               $line->[2],
    	               $line->[3],
    	               $line->[4],
    	               $line->[5],
    	               $line->[6],
    	              );
      }
    print $table->show();
    return 0;
	 } 
 

  $Ashield->{STATUS_SEL}          = $html->form_select('STATUS', 
                                          { 
 	                                          SELECTED     => $Ashield->{STATUS},
 	                                          SEL_ARRAY    => \@service_status,
 	                                          STYLE        => \@service_status_colors,
 	                                          ARRAY_NUM_ID => 1
 	                                        });
   
  if ($Ashield->{STATUS} > 0) { 
    $Ashield->{STATUS_COLOR} = $service_status_colors[$Ashield->{STATUS}] ;
   }

  $html->tpl_show(_include('ashield_user', 'Ashield'), { %$Ashield, %$user });
  return 0; 	
}


#*******************************************************************
# Change user variant form
# ashield_chg_vid()
#*******************************************************************
sub ashield_chg_tp {
 my ($attr) = @_;

 my $user;

 if(defined($attr->{USER})) {
   $user = $attr->{USER};
   $user = $Ashield->user_info($user->{UID});
   if($user->{TOTAL} < 1) {
 	   $html->message('info', $_INFO, $_NOT_ACTIVE);
 	   return 0;
    }
  }
 else {
 	 $html->message('err', $_ERROR, "$_USER_NOT_EXIST");
 	 return 0;
  }

 my $period = $FORM{period} || 0;

 use Shedule;
 $shedule = Shedule->new($db, $admin);

if ($FORM{set}) {
  if ($period == 1) {
    $FORM{date_M}++;
    $shedule->add( {UID => $user->{UID},
                   TYPE => 'tp',
                   ACTION => $FORM{TP_ID},
    	             D => $FORM{date_D},
                   M => $FORM{date_M},
                   Y => $FORM{date_Y},
                   DESCRIBE => "$message<br>
                   $_FROM: '$FORM{date_Y}-$FORM{date_M}-$FORM{date_D}'",
                   MODULE => 'Ashield'
                    });

    if ($shedule->{errno}) {
      $html->message('err', $_ERROR, "[$shedule->{errno}] $err_strs{$shedule->{errno}}");	
     }
    else {
      $html->message('info', $_CHANGED, "$_CHANGED");
      $user->user_info($user->{UID});
    }
   }
  else {
    $Ashield->user_change({ %FORM });

    if ($Ashield->{errno}) {
      $html->message('err', $_ERROR, "[$users->{errno}] $err_strs{$users->{errno}}");	
     }
    else {
      #Take fees
      if ($Ashield->{TP_INFO}->{MONTH_FEE} > 0 && ! $Ashield->{STATUS}) {
        #ashield_get_month_fee($Ashield);
       }
      $html->message('info', $_CHANGED, "$_CHANGED");
      $Ashield->user_info($user->{UID});
    }
  }
}
elsif($FORM{del}) {
  $shedule->del( { UID => $user->{UID},
   	               ID  => $FORM{SHEDULE_ID}  } 
   	            );

  $html->message('info', $_DELETED, "$_DELETED [$FORM{SHEDULE_ID}]");
}

  $shedule->info( {UID     => $user->{UID},
                   TYPE    => 'tp',
                   MODULE  => 'Ashield'
                   });


  if ($shedule->{TOTAL} > 0) {
  	$table = $html->table( { width      => '100%',
  		                       caption    => "$_SHEDULE",
                             cols_align => ['left', 'left'],
                             rows => [ [ "$_TARIF_PLAN:", "$shedule->{ACTION}"   ],
                                       [ "$_DATE:",   "$shedule->{D}-$shedule->{M}-$shedule->{Y}" ],
                                       [ "$_ADMIN:",  "$shedule->{ADMIN_NAME}" ],
                                       [ "$_ADDED:",  "$shedule->{DATE}"     ],
                                       [ "ID:",       "$shedule->{SHEDULE_ID}"   ]  
                                      ]
                               } );

  	$Tariffs->{TARIF_PLAN_SEL} = $table->show(). $html->form_input('SHEDULE_ID', "$shedule->{SHEDULE_ID}", {TYPE => 'HIDDEN' });
  	$Tariffs->{ACTION}='del';
  	$Tariffs->{LNG_ACTION}=$_DEL;
  }
 else {
   $Tariffs->{TARIF_PLAN_SEL}=$html->form_select('TP_ID', 
                                          { 
 	                                          SELECTED  => $user->{TP_ID},
 	                                          SEL_MULTI_ARRAY   => $Tariffs->list({ MODULE => 'Ashield' }),
 	                                          MULTI_ARRAY_KEY   => 18,
 	                                          MULTI_ARRAY_VALUE => '0,1',
 	                                          NO_ID             => 1
 	                                        });

   $Tariffs->{PARAMS} .= form_period($period);	
   $Tariffs->{ACTION}='set';
   $Tariffs->{LNG_ACTION}=$_CHANGE;
  }

my $tp_index = $index + 4;
$Tariffs->{UID}     = $attr->{USER}->{UID};
$Tariffs->{m}       = $m;
$Tariffs->{TP_ID}   = $user->{TP_ID};
$Tariffs->{TP_NAME} = "$user->{TP_ID}:$user->{TP_NAME} ". $html->button("$_TARIF_PLANS", "index=$tp_index&TP_ID=$user->{TP_ID}", { TITLE => "$_TP", BUTTON => 1 } );

print $html->tpl_show(templates('form_chg_tp'), $Tariffs);
}

##**********************************************************
##
##**********************************************************
#sub ashield_get_month_fee {
#  my ($Ashield, $attr) = @_;
#
#  #Get active price
#  if ($Ashield->{TP_INFO}->{ACTIV_PRICE}) {
#    #my $users = Users->new($db, $admin, \%conf); 
#    #my $user  = $users->info($Ashield->{UID});
#    #my $date  = ($user->{ACTIVATE} ne '0000-00-00') ? $user->{ACTIVATE} : $DATE;
#    #my $time  = ($user->{ACTIVATE} ne '0000-00-00') ? '00:00:00' : $TIME;
#
#    $fees->take($user, $Ashield->{TP_INFO}->{ACTIV_PRICE}, 
#                              { DESCRIBE  => "$_ACTIVATE $_TARIF_PLAN", 
#   	                            DATE      => "$DATE $TIME"
#  	                           });  
#
#    $html->message('info', $_INFO, "$_ACTIVATE $_TARIF_PLAN");	
#   }
#
#  #Get month fee
#  if ($Ashield->{TP_INFO}->{MONTH_FEE} > 0) {
#     my $sum   = $Ashield->{TP_INFO}->{MONTH_FEE};
#     my $users = Users->new($db, $admin, \%conf); 
#     my $user  = $users->info($Ashield->{UID});
#     if ($Ashield->{TP_INFO}->{EXT_BILL_ACCOUNT})  {
#     	 $user->{BILL_ID}=$user->{EXT_BILL_ID} if ($user->{EXT_BILL_ID});
#      }
#
#     my $message = ''; 
#     #Current Month
#     my ($y, $m, $d)=split(/-/, $DATE, 3);
#
#     my ($active_y, $active_m, $active_d)=split(/-/, $Ashield->{ACTIVATE}, 3);	 
#     if (int("$y$m$d") < int("$active_y$active_m$active_d")) {
#     	  return ;
#      }
#
#        if ($Ashield->{TP_INFO}->{PERIOD_ALIGNMENT} && ! $Ashield->{TP_INFO}->{ABON_DISTRIBUTION}) {
#        	$message = "Dr.Web: $_MONTH_ALIGNMENT, ";
#          my $days_in_month=($m!=2?(($m%2)^($m>7))+30:(!($y%400)||!($y%4)&&($y%25)?29:28));
#
#          if ($Ashield->{ACTIVATE} && $Ashield->{ACTIVATE} ne '0000-00-00') {
#            $days_in_month=($active_m!=2?(($active_m%2)^($active_m>7))+30:(!($active_y%400)||!($active_y%4)&&($active_y%25)?29:28)); 
#            $d = $active_d;
#           }
#
#          $conf{START_PERIOD_DAY} = 1 if (! $conf{START_PERIOD_DAY});
#          $sum = sprintf("%.2f", $sum / $days_in_month * ($days_in_month - $d + $conf{START_PERIOD_DAY}));
#         }
#       
#        return 0 if ($sum == 0);
#        my $periods = 0;
#        if ($active_m > 0 && $active_m < $m) {
#        	$periods = $m - $active_m;
#         }
#        elsif ($active_m > 0 && ( $active_m >= $m  && $active_y < $y)) {
#        	$periods = 12 - $active_m + $m; 
#         }
#
#        $message .= "Dr.Web: $_MONTH_FEE: $sum ($Ashield->{TP_INFO}->{TP_ID})";
#        $message .= $attr->{EXT_DESCRIBE} if ($attr->{EXT_DESCRIBE});
#        if ($Ashield->{TP_INFO}->{ABON_DISTRIBUTION}) {
#        	$sum = $sum / ( ($m!=2?(($m%2)^($m>7))+30:(!($y%400)||!($y%4)&&($y%25)?29:28)) );
#        	$message .= " - $_ABON_DISTRIBUTION";
#         }
#
#        $m = $active_m if ($active_m > 0);
#        for (my $i=0; $i<=$periods; $i++) {
#          if ($m > 12) {
#          	$m=1;
#          	$active_y=$active_y+1;
#           }
#
#          $m = sprintf("%.2d", $m);
#          if ( $i > 0 ) {
#  	        $sum     = $Ashield->{TP_INFO}->{MONTH_FEE};
#            $message = "Dr.Web: $_MONTH_FEE: $sum ($Ashield->{TP_INFO}->{TP_ID})";
#            
#            $message .= $attr->{EXT_DESCRIBE} if ($attr->{EXT_DESCRIBE});
#            $DATE    = "$active_y-$m-01";
#            $TIME    = "00:00:00";
#           }
#          elsif ($Ashield->{ACTIVATE} && $Ashield->{ACTIVATE} ne '0000-00-00'){
#            $DATE    = "$active_y-$m-$active_d";
#            $TIME    = "00:00:00";
#            
#            if ($Ashield->{TP_INFO}->{PERIOD_ALIGNMENT}) {
#              $users->change($Ashield->{UID}, { ACTIVATE => '0000-00-00',
#              	                                UID      => $Ashield->{UID} });
#             }
#           }
#         
#          $fees->take($users, $sum, { DESCRIBE  => $message, 
#        	                            METHOD    => 1, 
#        	                            DATE      => "$DATE $TIME"
#        	                           });  
#          if ($fees->{errno}) {
#        	  $html->message('err', $_ERROR, "[$fees->{errno}] $fees->{errstr}") if (! $attr->{QUIET});;	
#           }
#          else {
#          	print "Expire:";
#          	
#            $html->message('info', $_INFO, $message) if (! $attr->{QUIET});	
#           }
#
#          $m++;
#         }
#      }
#}




#**********************************************************
#
#**********************************************************
sub ashield_users_list {
 my ($attr)=@_;


 return 0;

 if (! $permissions{0}{2}) {
	 return 0;
  }

 if ($attr->{TP}) {
 	 $FORM{TP_ID} = $FORM{TP_NUM} if ($FORM{TP_NUM});
   $LIST_PARAMS{TP_ID} = $FORM{TP_ID};
   #$pages_qs .= "&TP_ID=$FORM{TP_ID}";
  }
 elsif($FORM{TP_ID} || $FORM{TP_NUM}) {
 	 $FORM{TP_ID} = $FORM{TP_NUM} if ($FORM{TP_NUM});
   $FORM{subf}=$index;
   dv_tp();
   return 0;
  }
 
 
 $Ashield->{GROUP_SEL}    = sel_groups();
 $Ashield->{STATUS_SEL}   = $html->form_select('STATUS', 
                                          { 
 	                                          SELECTED     => $FORM{STATUS},
 	                                          SEL_HASH     => { '' => "$_ALL",
 	                                          	                0  => $service_status[0],
 	                                          	                1  => $service_status[1],
 	                                          	                2  => $service_status[2],
 	                                          	                3  => $service_status[3],  
 	                                          	                4  => $service_status[4]    
 	                                          	                },
                                            NO_ID       => 1,
                                            STYLE        => \@service_status_colors,
 	                                        });

 
 form_search({ SEARCH_FORM => $html->tpl_show(_include('dv_users_search', 'Dv'),
 	                                            { %$Ashield, %FORM },
 	                                            { OUTPUT2RETURN => 1 })    });


 print $html->letters_list({ pages_qs => $pages_qs  }); 

 if ($FORM{letter}) {
   $LIST_PARAMS{FIRST_LETTER} = $FORM{letter};
   $pages_qs .= "&letter=$FORM{letter}";
  } 


my $list = $Ashield->list( { %LIST_PARAMS } );

my @TITLE = ($_LOGIN, $_FIO, $_DEPOSIT, $_CREDIT, $_TARIF_PLANS, $_STATUS, '-', '-');
my @EX_TITLE_ARR  = split(/, /, $Ashield->{SEARCH_FIELDS});

my %SEARCH_TITLES = ('INET_NTOA(dv.ip)'      => 'IP',
                     'INET_NTOA(dv.netmask)' => 'NETMASK',
                     'dv.speed'              => $_SPEED,
                     'dv.port'               => $_PORT,
                     'dv.cid'                => 'CID',
                     'dv.filter_id'          => 'Filter ID',
                     'tp.name'               => "$_TARIF_PLAN"
                   );


for(my $i=0; $i<$Ashield->{SEARCH_FIELDS_COUNT}; $i++){
	push @TITLE, '-';
	$TITLE[6+$i] = $SEARCH_TITLES{$EX_TITLE_ARR[$i]} || "$_SEARCR";
}

if ($Ashield->{errno}) {
  $html->message('err', $_ERROR, "[$Ashield->{errno}] $err_strs{$Ashield->{errno}}");	
  return 0;
 }
elsif ($Ashield->{TOTAL} == 1) {
	form_users({  USER => user_info($list->[0]->[6+$Ashield->{SEARCH_FIELDS_COUNT}]) });
	return 0;
}



my $table = $html->table( { width      => '100%',
                            caption    => "Internet - $_USERS",
                            border     => 1,
                            title      => \@TITLE,
                            cols_align => ['left', 'left', 'right', 'right', 'left', 'center', 'center:noprint', 'center:noprint'],
                            qs         => $pages_qs,
                            pages      => $Ashield->{TOTAL}
                           });

foreach my $line (@$list) {
  my $payments = ($permissions{1}) ?  $html->button("$_PAYMENTS", "index=2&UID=". $line->[6+$Ashield->{SEARCH_FIELDS_COUNT}]) : ''; 
  
  my @fields_array  = ();
  for(my $i=0; $i<$Ashield->{SEARCH_FIELDS_COUNT}; $i++){
     push @fields_array, $line->[6+$i];
   }

  $table->addrow(
   $html->button("$line->[0]", "index=15&UID=". $line->[6+$Ashield->{SEARCH_FIELDS_COUNT}]), 
   "$line->[1]",
   "$line->[2]", 
   "$line->[3]", 
   "$line->[4]", 
   ($line->[5] > 0) ? $html->color_mark($service_status[$line->[5]], $service_status_colors[$line->[5]]) : "$service_status[$line->[5]]",
   @fields_array, 
   $payments, 
   $html->button("$_STATS", "index=". ((! $FORM{TP_SHOW}) ? $index + 3 : $index - 9 ) ."&UID=". $line->[6+$Ashield->{SEARCH_FIELDS_COUNT}])

   );
}
print $table->show();

if (! $admin->{MAX_ROWS}) {
  $table = $html->table( { width      => '100%',
                         cols_align => ['right', 'right'],
                         rows       => [ [ "$_TOTAL:", $html->b($Ashield->{TOTAL}) ] ]
                        } );
  print $table->show();
 }

  return 0;
}

#**********************************************************
#
#**********************************************************
sub ashield_drweb_groups {
  if ($FORM{add}) {
  	 my $result_hash = ashield_drweb_request('api/2.0/add-group.ds', 
  	                     { id    => $FORM{ID},
                           name  => $FORM{NAME},
                           description => $FORM{DESCRIPTION}
                         });
    $FORM{add}=undef;
    if ($result_hash->{error}) {
      $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $result_hash->{error}->[0]->{message}->[0]");
      return 0;
     }
    else {
      $html->message('info', $_INFO, "Dr.Web: $_GROUP $_ADDED");
      return 1;
     }
   }
  elsif($FORM{info}) {
  	my $result_hash = ashield_drweb_request('api/2.0/get-group-info.ds', { id => $FORM{info} });
    if ($result_hash->{error}) {
      $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $result_hash->{error}->[0]->{message}->[0] ");
      return 0;
     }
    else {
    	return $result_hash->{groups}->[0]->{total};
     }
   }
  elsif ($FORM{del}  && $FORM{is_js_confirmed} ) {
  	my $result_hash = ashield_drweb_request('api/2.0/delete-group.ds', 
  	                     { id    => $FORM{del}
                         });
    $html->message('info', $_INFO, "Dr.Web $_GROUP: $FORM{del} $_DELETED");                       
   }
  else {
    #list
    my $result_hash = ashield_drweb_request('api/2.0/get-group-info.ds');
    my $table = $html->table( { width      => '100%',
                            caption    => "Ashield $_GROUPS",
                            border     => 1,
                            title      => ['#', $_NAME, $_TYPE, $_COMMENTS, $_CHANGED, $_CREATED, 'Platform', '-'],
                            cols_align => ['left', 'left', 'left', 'left', 'right', 'right', 'left', 'center:noprint', 'center:noprint'],
                            qs         => $pages_qs,
                            pages      => $Ashield->{TOTAL},
                            ID         => 'ASHIELD_GROUPS_LIST',
                           });

    my $total = $result_hash->{groups}->[0]->{total};

    foreach my $val (@{ $result_hash->{groups}->[0]->{group}  }) {
      $table->addrow(
        $val->{id}->[0], 
        $val->{name}->[0],
        $val->{type}->[0],
        $val->{description}->[0],
        $val->{modifiedtime}->[0],
        $val->{createdtime}->[0],
        $val->{platform}->[0],
        #$html->button("$_STATS", "index=". ((! $FORM{TP_SHOW}) ? $index + 3 : $index - 9 ) ."&UID=". $line->[6+$Ashield->{SEARCH_FIELDS_COUNT}])
        ($val->{id}->[0] =~ /^ashield/) ? $html->button($_DEL, "index=$index&del=$val->{id}->[0]", { MESSAGE => "$_DEL $val->{id}->[0]?" }) : '' 
       );
     }
    print $table->show();

    $table = $html->table( { width      => '100%',
                             cols_align => ['right', 'right'],
                             rows       => [ [ "$_TOTAL:", $html->b($total) ] ]
                          } );
    print $table->show();
  }
}

#**********************************************************
#
#**********************************************************
sub ashield_drweb_user {
  my ($attr)=@_;

if ($FORM{add}) {
  my $result_hash = ashield_drweb_request('api/2.0/add-customer.ds', 
                           { id          => $FORM{UID},
                           	 name        => 'user',
                             password    => '123456',
                             #group       => undef,
                             #expire      => undef,
                             #blockbeg    => undef,
                             #blockend    => undef,
                             #description => undef,
                           	});
    if ($result_hash->{error}) {
      $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $result_hash->{error}->[0]->{message}->[0]");
      return 0;
     }
    else {
      $html->message('info', $_INFO, "Dr.Web $_USER $_ADDED");
      return 1;
     }
 }
elsif($FORM{change}) {
	
 } 
elsif($FORM{del}) {
   if ($result_hash->{error}) {
      $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $result_hash->{error}->[0]->{message}->[0]");
      return 0;
     }
    else {
      $html->message('info', $_INFO, "Dr.Web: $_GROUP $_ADDED");
      return 1;
     }
 }
elsif ($FORM{info}) {
	my $result_hash = ashield_drweb_request('api/2.0/get-customer-info.ds', { id => $FORM{info} }); 
	if ($result_hash->{error}) {
    $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $result_hash->{error}->[0]->{message}->[0]");
    return 0;
   }

$table = $html->table( { width      => '450',
                         border     => 1,
                         caption    => "$_STATS",
                      } );

while (my($k, $v)=each %{ $result_hash->{customers}->[0]->{customer}->[0] }){
  next if ($k =~ /from|till|virus|stations/);
  my $val = $v;
  
  if (ref $v eq 'ARRAY') {
  	$val = $v->[0];
   }

  if(ref $val eq 'HASH') {
  	my $val2 = '';
  	while(my($k, $v)=each %{ $val }) {
  	  $val2 .= " $k / ";
  	  $val2 .= (ref $v eq 'ARRAY') ? $v->[0] : $v;
  	  $val2 .= "<br/>";
  	 }
    $val = $val2;
   } 

  $table->addrow($k, 
   $val
  );
 }
print $table->show();
}


}



#**********************************************************
#
#**********************************************************
sub ashield_drweb_report {

  ashield_drweb_groups();

my $result_hash = ashield_drweb_request('api/2.0/get-server-info.ds');
my $table = $html->table( { width      => '450',
                            border     => 1,
                            caption    => "$_INFO",
                            rows       => [[ 'Version:', $result_hash->{server}->[0]->{version}->[0] ],
                             [ 'ID:', $result_hash->{server}->[0]->{id}->[0] ],
                             [ 'Platform:', $result_hash->{server}->[0]->{platform}->[0] ]
                             ]
                         } );
print $table->show();

$table = $html->table( { width      => '450',
                         border     => 1,
                         caption    => "$_STATS",
                      } );

while (my($k, $v)=each %{ $result_hash->{server}->[0]->{statistics}->[0] }){
  next if ($k =~ /from|till|virus|stations/);
  $table->addrow($k, 
   (ref $v eq 'ARRAY') ? $v->[0] : $v
  );
 }
print $table->show();


$table = $html->table( { width       => '450',
                         border      => 1,
                         caption     => "$_VIRUSES",
                         title_plain => [$_COUNT, $_NAME],
                         } );
foreach my $val ( @{ $result_hash->{server}->[0]->{statistics}->[0]->{viruses}->[0]->{virus} } ){  
  $table->addrow($val->{count}, $val->{content});
 }
print $table->show();

$table = $html->table( { width      => '450',
                         border     => 1,
                         caption    => "$_STATIONS",
                         } );

while (my($k, $v)=each %{ $result_hash->{server}->[0]->{statistics}->[0]->{stations}->[0] }){
  $table->addrow($k, 
   (ref $v eq 'ARRAY') ? $v->[0] : $v
  );
 }
print $table->show();
}


##**********************************************************
## monthly_fees
##**********************************************************
sub ashield_monthly {
 my ($attr) = @_;

 my $debug = $attr->{DEBUG} || 0;
 my $debug_output = '';
 $debug_output .= "Ashield - Monthly pariodic payments\n" if ($debug > 1);


# use Users;
# my $users = Users->new($db, $admin, \%conf); 
# my $list = $tariffs->list({ %LIST_PARAMS, MODULE => 'Ashield' });
# $ADMIN_REPORT{DATE}=$DATE if (! $ADMIN_REPORT{DATE});
# my ($y, $m, $d)=split(/-/, $ADMIN_REPORT{DATE}, 3);
# $m--;
#
# my $date_unixtime =  mktime(0, 0, 0, $d, $m, $y - 1900, 0, 0, 0);
##Get Preview month begin end
# if ($m == 0) {
#   $m = 12;
#   $y--;
#  }
# $m = sprintf("%02.d", $m);
# my $days_in_month=($m!=2?(($m%2)^($m>7))+30:(!($y%400)||!($y%4)&&($y%25)?29:28));
#
# my $pre_month_begin = "$y-$m-01";
# my $pre_month_end   = "$y-$m-$days_in_month";
#
# foreach my $line (@$list) {
# 	 my $TP_ID       = $line->[0];
# 	 my $min_use     = $line->[15];
# 	 my $postpaid    = $line->[4];
#   my $tp_postpaid = $line->[12];
#   my $month_fee   = $line->[6];
#
#   my %used_traffic = ();
#
#   #Monthfee & min use
# 	 if ($month_fee > 0 || $min_use > 0) {
# 	   $debug_output .= "TP ID: $line->[0] MF: $line->[6] POSTPAID: $line->[12] REDUCTION: $line->[11] EXT_BILL_ID: $line->[13] CREDIT: $line->[14] MIN_USE: $min_use\n" if ($debug > 1);
#
#     my $ulist = $Ashield->user_list({ 
#         ACTIVATE   => "<='$ADMIN_REPORT{DATE}'",
#         EXPIRE     => ">'$ADMIN_REPORT{DATE}'",
#         STATUS     => 0,
#         LOGIN_STATUS => 0,
#         TP_ID      => $TP_ID,
#         SORT       => 1,
#         PAGE_ROWS  => 1000000,
# 	   	 });
#
#
#     foreach my $u (@$ulist) {
#       $debug_output .= " Login: $u->[0] ($u->[7])  TP_ID: $u->[10] Fees: $line->[6] REDUCTION: $u->[14]  $u->[2] $u->[3] $u->[10] - $u->[11]\n" if ($debug > 3); 	
#       #Check bill id and deposit 
#       
#       my %user = (
#            LOGIN      => $u->[0],  
#            UID        => $u->[7],
#            BILL_ID    => ($line->[13] > 0) ? $u->[15] : $u->[13],
#            REDUCTION  => $u->[14],
#            ACTIVATE   => $u->[11],
#            DEPOSIT    => $u->[2],
#            CREDIT     => ($u->[3] > 0) ? $u->[3] : $line->[14]
#           );
#       
#       #Check bill ID and deposit
#       if (($user{BILL_ID} && $user{BILL_ID} > 0) && defined($user{DEPOSIT})) {
#         my %FEES_PARAMS = (
#                            DATE     => $ADMIN_REPORT{DATE},
#                            METHOD   => 1 
#                            );  
#
#         my $sum = 0;
#         $START_PERIOD_DAY = ($conf{START_PERIOD_DAY}) ? $conf{START_PERIOD_DAY} : 1;
#
#         #Min use 
#         if ($min_use > 0 && $d == $START_PERIOD_DAY) {
#
#          }
#         #Month Fee
#         else {
#           #Make sum 
#           $sum = $month_fee;
#    
#           if ($line->[11] == 1 && $user{REDUCTION} > 0) {
#             $sum = $sum * (100 - $user{REDUCTION}) / 100;
#            }
#
#           #If deposit is above-zero or TARIF PALIN is POST PAID or PERIODIC PAYMENTS is POSTPAID
#            if($postpaid == 1 || $user{DEPOSIT} + $user{CREDIT} > 0 || $tp_postpaid == 1) {
#
#              #take fees in first day of month
#              $FEES_PARAMS{DESCRIBE}="$_MONTH_FEE ($_TV/$TP_ID)";  
#
#              if (($user{ACTIVATE} eq '0000-00-00' and $d == $START_PERIOD_DAY) || $conf{IPTV_CLOSE_PERIOD}) {
#                if ($debug > 4) {
#                  $debug_output .= " UID: $user{UID} SUM: $sum REDUCTION: $user{REDUCTION}\n";
#                 }
#                else {
#                  $fees->take(\%user, $sum, { %FEES_PARAMS } );  
#                  $debug_output .= " $user{LOGIN}  UID: $user{UID} SUM: $sum REDUCTION: $user{REDUCTION}\n" if ($debug > 0);
#                 }
#               }
#             # If activation set to monthly fees taken throught 30 days
#              elsif($user{ACTIVATE} ne '0000-00-00') {
#                my ($activate_y, $activate_m, $activate_d)=split(/-/, $user{ACTIVATE}, 3);
#                $activate_m--;
#                my $active_unixtime =  mktime(0, 0, 0, $activate_d, $activate_m, $activate_y - 1900, 0, 0, 0);
#                if ($date_unixtime - $active_unixtime > 30 * 86400) {
#                  if ($debug > 4) {
#                    $debug_output .= " $user{LOGIN} UID: $user{UID} SUM: $sum REDUCTION: $user{REDUCTION}\n";
#                   }
#                  else {
#                    $fees->take(\%user, $sum, { %FEES_PARAMS } );
#                    $debug_output .= " $user{LOGIN} UID: $user{UID} SUM: $sum REDUCTION: $user{REDUCTION} CHANGE ACTIVATE\n" if ($debug > 0);
#                    if ($fees->{errno}) {
#                    	print "Error: [$fees->{errno}] $fees->{errstr} ";
#                    	if ($fees->{errno} == 14 ) {
#                 	 	    print "[ $user{UID} ] $user{LOGIN} - Don't have money account";
#               	       }
#               	      print "\n";
#               	     }
#                    else {
#                      $users->change($user{UID}, { 
#                	                        UID      => $user{UID},
#                	                        ACTIVATE => $ADMIN_REPORT{DATE} } 
#                 	             );
#                     }
#                   }
#                 }
#                 #print "   $user{LOGIN} $line->[6] $user{DEPOSIT} $USER{CREDIT} $u->[10] - $u->[11]\n"; 	
#               }
#             }
#         
#          }
#        }
#       else {
#      	 print "[ $user{UID} ] $user{LOGIN} - Don't have money account\n";
#        }
# 	  }
#  }
#
##Channels fees
#     $ulist = $Ashield->user_list({ 
#         ACTIVATE   => "<='$ADMIN_REPORT{DATE}'",
#         EXPIRE     => ">'$ADMIN_REPORT{DATE}'",
#         STATUS     => 0,
#         LOGIN_STATUS => 0,
#         TP_ID      => $TP_ID,
#         SORT       => 1,
#         PAGE_ROWS  => 1000000,
#         SHOW_CHANNELS => 1,
#         MONTH_PRICE => '>0'
# 	   	 });
#
#     foreach my $u (@$ulist) {
#       my $channel_num   =  $u->[14];
#       my $sum           =  $u->[16];
#       $debug_output .= " Login: $u->[0] ($u->[7])  TP_ID: $u->[10] Channel: $channel_num Month Price: $sum REDUCTION: $u->[14]  $u->[2] $u->[3] $u->[10] - $u->[11]\n" if ($debug > 3); 	
#       #Check bill id and deposit 
#       
#       my %user = (
#            LOGIN      => $u->[0],  
#            UID        => $u->[5],
#            BILL_ID    => ($line->[13] > 0) ? $u->[12] : $u->[10],
#            REDUCTION  => $u->[11],
#            ACTIVATE   => '0000-00-00',
#            DEPOSIT    => $u->[1],
#            CREDIT     => ($u->[2] > 0) ? $u->[2] : $line->[14]
#           );  
#       
#       if($postpaid == 1 || $user{DEPOSIT} + $user{CREDIT} > 0 || $tp_postpaid == 1) {
#              #take fees in first day of month
#              $FEES_PARAMS{DESCRIBE}="$_MONTH_FEE ($_TV $_CHANNELS:$channel_num)";  
#
#              if (($user{ACTIVATE} eq '0000-00-00' and $d == $START_PERIOD_DAY) || $conf{IPTV_CLOSE_PERIOD}) {
#                if ($debug > 4) {
#                  $debug_output .= " UID: $user{UID} SUM: $sum REDUCTION: $user{REDUCTION}\n";
#                 }
#                else {
#                  $fees->take(\%user, $sum, { %FEES_PARAMS } );  
#
#                  if ($fees->{errno}) {
#                    	print "Error: [ $user{UID} ] $user{LOGIN} SUM: $sum [$fees->{errno}] $fees->{errstr} ";
#                    	if ($fees->{errno} == 14 ) {
#                 	 	    print "UID: $user{UID} LOGIN: $user{LOGIN} - Don't have money account";
#               	       }
#               	      print "\n";
#             	     }
#                  else {
#                    $debug_output .= " $user{LOGIN}  UID: $user{UID} SUM: $sum REDUCTION: $user{REDUCTION}\n" if ($debug > 0);
#                   }
#                 }
#               }
#        }
#     }
# }
#
# if ($conf{IPTV_CLOSE_PERIOD}) {
#   	$users->config_del('IPTV_CLOSED_PERIOD');
#  	$users->config_add({ PARAM   => 'IPTV_CLOSED_PERIOD',
#                         VALUE   => "$DATE $TIME"
#                         });
#  }


  $DEBUG .= $debug_output;
  return $debug_output;
}
#
#
##**********************************************************
## user_warnings
## 
##**********************************************************
#sub ashield_users_warning_messages {
#
#my %LIST_PARAMS = (USERS_WARNINGS => 'y' ) ;
#my $list = $Ashield->list( { %LIST_PARAMS } );
#
#$ADMIN_REPORT{USERS_WARNINGS} = sprintf("%-14s| %4s|%-20s| %9s| %8s|\n", $_LOGIN, 'TP', $_TARIF_PLAN, $_DEPOSIT, $_CREDIT).
#   "---------------------------------------------------------------\n";
#return 0 if ($Ashield->{TOTAL} < 1);
#my %USER_INFO = ();
#
#foreach my $line (@$list) {
#  #u.id, u.email, u.tp_id, u.credit, u.deposit, tp.name, tp.uplimit
#
#  $USER_INFO{LOGIN}  = $line->[0];
#  $USER_INFO{TP_NAME}= $line->[5];
#  $USER_INFO{TP_ID}  = $line->[2];
#  $USER_INFO{DEPOSIT}= $line->[4];
#  $USER_INFO{CREDIT} = $line->[3];
#  
#  my $email = ((! defined($line->[1])) || $line->[1] eq '') ? "$line->[0]\@$conf{USERS_MAIL_DOMAIN}" : "$line->[1]";
#  
# 
#  $ADMIN_REPORT{USERS_WARNINGS} .= sprintf ("%-14s| %4d|%-20s| %9.4f| %8.2f|\n", 
#  $USER_INFO{LOGIN}, $USER_INFO{TP_ID}, $USER_INFO{TP_NAME},  $USER_INFO{DEPOSIT}, $USER_INFO{CREDIT});
#  
#  my $message = $html->tpl_show(_include('ashield_users_warning_messages', 'Ashield'), \%USER_INFO, { notprint => 1 });
#
#  sendmail("$conf{ADMIN_MAIL}", "$email", "???????????? ??????? ??????????.", 
#              "$message", "$conf{MAIL_CHARSET}", "2 (High)");
#}
#
#$ADMIN_REPORT{USERS_WARNINGS} .= "---------------------------------------------------------------
#$_TOTAL: $Ashield->{TOTAL}\n";
#}



#***********************************************************
# ashield_sheduler
#***********************************************************
sub ashield_sheduler {
	my ($type, $action, $uid)=@_;

  my $user = $Ashield->user_info($uid);  	
  
  if ($type eq 'tp') {
    $Ashield->user_change({UID   => $uid, 
    	                  TP_ID => $action 
    	                  });
   }
  #Set channel
  elsif ($type eq 'channels') {
  	$action =~ s/;/, /g;
  	$FORM{IDS}=$action;
  	$LIST_PARAMS{UID}=$uid;
  	$FORM{change_now}=1;
  	$users->info( $uid );
  	ashield_user_channels({ QUIET  => 1 });
   }
}


#**********************************************************
#
#**********************************************************
#sub ashield_user_info {
#	my ($attr)=@_;
#	
#	my $Ashield = $Ashield->user_info($FORM{UID});
#  if($Ashield->{TOTAL} > 0) {
#	  $html->tpl_show(_include('ashield_client_info', 'Ashield'), $Ashield);
#	
#	 }
#	else {
#		 $user->info($user->{UID}, { SHOW_PASSWORD => 1 });
#     $user->pi({ ID => $users->{UID} });
#     $Ashield->{EMAIL}=$users->{EMAIL};
#		
#		if ($FORM{add}) {
#    $Ashield->user_add({ %FORM });
#    if (! $Ashield->{errno}) {
#    	$Ashield->{ACTIVATE}='0000-00-00';
#      if (! $FORM{STATUS}) {
#        #ashield_get_month_fee($Ashield);
#        my $result_hash=ashield_drweb_request('interfaces/user_registration.php', {
#      	  login      => "$user->{LOGIN}",
#      	  name       => $users->{FIO} || '-',
#      	  lastname   => "-",
#      	  password   => "$user->{PASSWORD}",
#      	  email      => $FORM{EMAIL} || '-',
#      	  contract   => "$user->{CONTRACT_ID}",
#      	  checkword  => $conf{ASHIELD_DRWEB_CABINET_PASSWD}
#      	  },
#      	  { SERVER_ADDR    => "$conf{ASHIELD_DRWEB_CABINET_HOST}",
#      	  	});
#
#  	    if ($result_hash->{error}) {
#          $html->message('err', $_ERROR, "Dr.Web: [$result_hash->{error}->[0]->{code}->[0]] $result_hash->{error}->[0]->{message}->[0]");
#         }
#        else {
#          $html->message('info', $_INFO, "Dr.Web: $_USER $_ADDED");
#         }
#       }
#      $html->message('info', $_INFO, "$_ADDED");	
#     }			
#		 }
#		$Ashield->{LNG_ACTION}= $_ACTIVATE;
#		$Ashield->{ACTION}    = 'add';
#	  $html->tpl_show(_include('ashield_client_subcribe', 'Ashield'), $Ashield);
#	 }	
#}


#**********************************************************
#
#**********************************************************
sub ashield_drweb_request {
  my ($request, $content, $attr) = @_;

  my $serveraddr = ($attr->{SERVER_ADDR}) ?  $attr->{SERVER_ADDR}.'/'.$request  : $conf{ASHIELD_DRWEB_HOST} .'/'. $request;

  if ($content->{checkword}) {
    eval { require Digest::MD5; };
    if (! $@) {
      Digest::MD5->import();
     }
    else {
      print "Content-Type: text/html\n\n";
      print "Can't load 'Digest::MD5' check http://www.cpan.org";
      exit;
     }
     my $md5 = new Digest::MD5;
     $md5->reset;
     $md5->add($content->{checkword}); 
     $content->{checkword} = $md5->hexdigest();	
   }

my $response = $ua -> request( POST $serveraddr,
			Authorization => 'Basic ' .
			encode_base64( join( ':', ( "$conf{ASHIELD_DRWEB_LOGIN}", "$conf{ASHIELD_DRWEB_PASSWD}" ) ), '' ),
			Content => [ %$content ] 
				           );

if(! $response->is_success() ) {   
	$html->message('err', $_ERROR, "BAD:\n".
	    $response->code(). 
	    ', '.
	    $response->status_line());
	return ;
}

  return 1, xml_analize( $response->content() );
}




#**********************************************************
#
#**********************************************************
sub xml_analize {
	my ($content) = @_;
	
eval { require XML::Simple; };
if (! $@) {
   XML::Simple->import();
 }
else {
   print "Content-Type: text/html\n\n";
   print "Can't load 'XML::Simple' check http://www.cpan.org";
   exit;
 }

$FORM{__BUFFER} =~ s/encoding="windows-1251"//g;
my $_xml = eval { XMLin("$content", forcearray=>1) };


#print "Content-Type: text/html\n\n";
#print "<textarea cols=60 rows=10>$content</textarea>\n";


if($@) {
  #mk_log("---- Content:\n".
  #    $FORM{__BUFFER}.
  #    "\n----XML Error:\n".
  #    $@
  #    ."\n----\n");
  print "<textarea cols=60 rows=10>$content</textarea>\n";
  return 0;
 }
else {
  if ($debug == 1) {
 	  mk_log($FORM{__BUFFER});
   }
}
 return $_xml;
}


1

