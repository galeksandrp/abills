#Network managment
#

require "Equipment.pm";
Equipment->import();
my $Equipment = Equipment->new($db, $admin, \%conf);

use SNMP_Session;
use SNMP_util;
use BER;
my $Nas;

my $Dhcphosts;
if (in_array('Dhcphosts', \@MODULES)) {
 	use Dhcphosts;
  $Dhcphosts = Dhcphosts->new($db, $admin, \%conf);
}

my $used_ports;
my @service_status_colors = ("$_COLORS[9]", "840000", '#808080', '#0000FF', "$_COLORS[6]", '#009999');

#**********************************************************
#
#**********************************************************
sub equipment_model {

  $Equipment->{ACTION}     = 'add';
  $Equipment->{ACTION_LNG} = $_ADD;

  if ($FORM{add}) {
    $Equipment->model_add({%FORM});

    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_ADDED");
    }
  }
  elsif ($FORM{change}) {
    $Equipment->model_change({%FORM});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGED");
    }
  }
  elsif (defined($FORM{chg})) {
    $Equipment->model_info($FORM{chg});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGING");
    }
    $Equipment->{ACTION}     = 'change';
    $Equipment->{ACTION_LNG} = $_CHANGE;
  }
  elsif (defined($FORM{del}) && defined($FORM{is_js_confirmed})) {
    $Equipment->model_del($FORM{del});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_DELETED");
    }
  }

  if ($Equipment->{errno}) {
    $html->message('err', $_ERROR, "[$Equipment->{errno}] $err_strs{$Equipment->{errno}}");
  }

  $Equipment->{TYPE_SEL} = $html->form_select(
      'TYPE_ID',
      {
        SELECTED       => $Equipment->{TYPE_ID},
        SEL_LIST       => $Equipment->type_list({ COLS_NAME => 1 }),
        NO_ID          => 1,
        MAIN_MENU      => get_function_index('equipment_type'),
        MAIN_MENU_AGRV => "chg=$Equipment->{MODEL_ID}"
      }
  );

  $Equipment->{VENDOR_SEL} = $html->form_select(
      'VENDOR_ID',
      {
        SELECTED       => $Equipment->{VENDOR_ID},
        SEL_LIST       => $Equipment->vendor_list({ COLS_NAME => 1 }),
        NO_ID          => 1,
        MAIN_MENU      => get_function_index('equipment_vendor'),
        MAIN_MENU_AGRV => "chg=$Equipment->{VENDOR_ID}"
      }
    );


  $html->tpl_show(_include('equipment_model', 'Equipment'), { %$Equipment, %FORM });

  my $list  = $Equipment->model_list({%LIST_PARAMS, COLS_NAME => 1 });
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_EQUIPMENT",
      border     => 1,
      title      => [ $_NAME, $_VENDOR, "$_TYPE", "$_PORTS", '-', '-' ],
      cols_align => [ 'left', 'left', 'left', 'left', 'center:noprint', 'center:noprint' ],
      qs         => $pages_qs,
      pages      => $Equipment->{TOTAL},
      ID         => 'EQUIPMENT_MODELS'
    }
  );

  foreach my $line (@$list) {
    my $delete = $html->button($_DEL, "index=$index&del=$line->{id}", { MESSAGE => "$_DEL $line->{model_name}?", CLASS => 'del' });
    my $change = $html->button($_INFO, "index=$index&chg=$line->{id}", { CLASS => 'show' });

    $table->addrow($line->{model_name}, 
      $line->{vendor_name}, 
      $line->{type_name}, 
      $line->{ports}, 
      $change, $delete);
  }

  print $table->show();

  $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'left', 'right' ],
      rows       => [ [ "$_TOTAL:", $Equipment->{TOTAL} ] ]
    }
  );

  print $table->show();

  return 0;
}

#**********************************************************
#
#**********************************************************
sub equipment_type {

  $Equipment->{ACTION}     = 'add';
  $Equipment->{ACTION_LNG} = $_ADD;

  if ($FORM{add}) {
    $Equipment->type_add({%FORM});

    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_ADDED");
    }
  }
  elsif ($FORM{change}) {
    $Equipment->type_change({%FORM});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGED");
    }
  }
  elsif (defined($FORM{chg})) {
    $Equipment->type_info($FORM{chg});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGING");
    }
    $Equipment->{ACTION}     = 'change';
    $Equipment->{ACTION_LNG} = $_CHANGE;
  }
  elsif (defined($FORM{del}) && defined($FORM{is_js_confirmed})) {
    $Equipment->type_del($FORM{del});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_DELETED");
    }
  }

  if ($Equipment->{errno}) {
    $html->message('err', $_ERROR, "[$Equipment->{errno}] $err_strs{$Equipment->{errno}}");
  }

  $html->tpl_show(_include('equipment_type', 'Equipment'), { %$Equipment, %FORM });

  my $list  = $Equipment->type_list({%LIST_PARAMS, COLS_NAME => 1 });
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_TYPES",
      border     => 1,
      title      => [ '#', $_NAME, '-', '-' ],
      cols_align => [ 'left', 'left', 'left', 'left', 'center:noprint', 'center:noprint' ],
      qs         => $pages_qs,
      pages      => $Equipment->{TOTAL},
      ID         => 'EQUIPMENT_TYPES'
    }
  );

  foreach my $line (@$list) {
    my $delete = $html->button($_DEL, "index=$index&del=$line->{id}", { MESSAGE => "$_DEL $line->{name}?", CLASS => 'del' });
    my $change = $html->button($_INFO, "index=$index&chg=$line->{id}", { CLASS => 'show' });

    $table->addrow($line->{id}, 
      $line->{name}, 
      $change, $delete);
  }

  print $table->show();

  $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'left', 'right' ],
      rows       => [ [ "$_TOTAL:", $Equipment->{TOTAL} ] ]
    }
  );

  print $table->show();

  return 0;
}


#**********************************************************
#
#**********************************************************
sub equipment_vendor {

  $Equipment->{ACTION}     = 'add';
  $Equipment->{ACTION_LNG} = $_ADD;

  if ($FORM{add}) {
    $Equipment->vendor_add({%FORM});

    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_ADDED");
    }
  }
  elsif ($FORM{change}) {
    $Equipment->vendor_change({%FORM});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGED");
    }
  }
  elsif (defined($FORM{chg})) {
    $Equipment->vendor_info($FORM{chg});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGING");
    }
    $Equipment->{ACTION}     = 'change';
    $Equipment->{ACTION_LNG} = $_CHANGE;
  }
  elsif (defined($FORM{del}) && defined($FORM{is_js_confirmed})) {
    $Equipment->vendor_del($FORM{del});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_DELETED");
    }
  }

  if ($Equipment->{errno}) {
    $html->message('err', $_ERROR, "[$Equipment->{errno}] $err_strs{$Equipment->{errno}}");
  }

  $html->tpl_show(_include('equipment_vendor', 'Equipment'), { %$Equipment, %FORM });

  my $list  = $Equipment->vendor_list({%LIST_PARAMS, COLS_NAME => 1 });
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_VENDOR",
      border     => 1,
      title      => [ '#', $_NAME, '-', '-' ],
      cols_align => [ 'left', 'left', 'left', 'left', 'center:noprint', 'center:noprint' ],
      qs         => $pages_qs,
      pages      => $Equipment->{TOTAL},
      ID         => 'EQUIPMENT_TYPES'
    }
  );

  foreach my $line (@$list) {
    my $delete = $html->button($_DEL, "index=$index&del=$line->{id}", { MESSAGE => "$_DEL $line->{name}?", CLASS => 'del' });
    my $change = $html->button($_INFO, "index=$index&chg=$line->{id}", { CLASS => 'show' });

    $table->addrow($line->{id}, 
      $line->{name}, 
      $change, $delete);
  }

  print $table->show();

  $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'left', 'right' ],
      rows       => [ [ "$_TOTAL:", $Equipment->{TOTAL} ] ]
    }
  );

  print $table->show();

  return 0;
}



#**********************************************************
#
#**********************************************************
sub equipment_info {
  $Equipment->{ACTION}     = 'add';
  $Equipment->{ACTION_LNG} = $_ADD;

  $Nas = Nas->new($db, \%conf);
  $Nas->info({ NAS_ID => $FORM{NAS_ID} });

  if ($FORM{PORT}) {
  	equipment_ports();
  	return 0;
  }
  elsif ($FORM{add}) {
    $Equipment->_add({%FORM});

    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_ADDED");
    }
  }
  elsif ($FORM{change}) {
    $Equipment->_change({%FORM});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGED");
    }
  }
  elsif ($FORM{get_info}) {
    equipment_test({ SNMP_COMMUNITY => "$Nas->{NAS_MNG_PASSWORD}\@". (($Nas->{NAS_MNG_IP_PORT}) ? $Nas->{NAS_MNG_IP_PORT} : $Nas->{NAS_IP}) });

    $Equipment->_info($FORM{NAS_ID});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGING");
    }

    $Equipment->{ACTION}     = 'change';
    $Equipment->{ACTION_LNG} = $_CHANGE;
  }
  elsif (defined($FORM{del}) && defined($FORM{is_js_confirmed})) {
    $Equipment->_del($FORM{del});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_DELETED");
    }
  }
  else {
    $Equipment->_info($FORM{NAS_ID});
    
    my $ports = $Equipment->{PORTS};
    
    if (!$Equipment->{errno}) {
    	$FORM{COMMENTS}=$Equipment->{COMMENTS};
    	$Equipment->model_info( $Equipment->{MODEL_ID} );
    	
    	if ($Equipment->{MANAGE_WEB}) {
    		$Equipment->{MANAGE_WEB} =~ s/%IP/$Nas->{NAS_IP}/g;
    		$Equipment->{MANAGE_WEB} = $html->button('WEB', "$Equipment->{MANAGE_WEB}", { 
    			GLOBAL_URL => $Equipment->{MANAGE_WEB},
    			BUTTON     => 1 }); 
    	}
    	$Equipment->{PORTS}=$ports if ($ports);
      $Equipment->{ACTION}     = 'change';
      $Equipment->{ACTION_LNG} = $_CHANGE;
    }
  }
  
  if ($FORM{PORT_SHOW}) {
  	$FORM{SELECT}=1;
  	equipment_ports({ NAS_INFO => $Equipment });
  	return 0;
  }

  $Equipment->{MODEL_SEL} = $html->form_select(
      'MODEL_ID',
      {
        SELECTED       => $Equipment->{MODEL_ID},
        SEL_LIST       => $Equipment->model_list({ COLS_NAME => 1 }),
        SEL_VALUE      => 'vendor_name,model_name',
        NO_ID          => 1,
        MAIN_MENU      => get_function_index('equipment_model'),
        MAIN_MENU_AGRV => "chg=$Equipment->{MODEL_ID}"
      }
  );

  $Equipment->{STATUS_SEL} = $html->form_select(
    'STATUS',
    {
      SELECTED => $Equipment->{STATUS} || $FORM{STATUS} || 0,
      SEL_HASH => {
        0  => $_ENABLE,
        1  => $_DISABLE,
        2  => $_NOT_ACTIVE,
        3  => $_ERROR,
        4  => $_BREAKING
      },
      NO_ID => 1,
      STYLE => \@service_status_colors,
    }
  );

  $used_ports = equipments_get_used_ports({ NAS_ID => $FORM{NAS_ID} });

  $Equipment->{FREE_PORTS} = $Equipment->{PORTS} - scalar( keys %$used_ports );

  $html->tpl_show(_include('equipment_info', 'Equipment'), { %$Nas, %$Equipment, %FORM });

  if ($Equipment->{PORTS} > 0) {
    equipment_ports({ NAS_INFO => $Equipment });
  }
 
}


#**********************************************************
#
#**********************************************************
sub equipment_list {
  $Equipment->{ACTION}     = 'add';
  $Equipment->{ACTION_LNG} = $_ADD;

  my $list  = $Equipment->_list({%LIST_PARAMS, COLS_NAME => 1 });
  my $table = $html->table(
    {
      width      => '100%',
      caption    => "$_EQUIPMENT",
      border     => 1,
      title      => [ 'NAS_ID', 'SYSTEM_ID', "$_STATUS", $_MODEL, $_VENDOR, "$_TYPE", "$_PORTS", '-', '-' ],
      cols_align => [ 'left', 'left', 'left', 'left', 'center:noprint', 'center:noprint' ],
      qs         => $pages_qs,
      pages      => $Equipment->{TOTAL},
      ID         => 'EQUIPMENT_MODELS',
      MENU       => "$_ADD:add_form=1&index=" . get_function_index('form_nas') . ':add' . ";$_SEARCH:index=$index&search_form=1:search",
    }
  );

  foreach my $line (@$list) {
    my $delete = $html->button($_DEL, "index=". get_function_index('equipment_info') ."&NAS_ID=$line->{nas_id}", { MESSAGE => "$_DEL $line->{model_name}?", CLASS => 'del' });
    my $change = $html->button($_INFO, "index=". get_function_index('equipment_info') ."&NAS_ID=$line->{nas_id}", { CLASS => 'info' });

    $table->addrow($line->{nas_id},
      $line->{system_id},
      $html->color_mark($status[$line->{status}], $service_status_colors[$line->{status}]),
      $line->{model_name}, 
      $line->{vendor_name}, 
      $line->{type_name}, 
      $line->{ports}, 
      $change, $delete);
  }

  print $table->show();

  $table = $html->table(
    {
      width      => '100%',
      cols_align => [ 'left', 'right' ],
      rows       => [ [ "$_TOTAL:", $Equipment->{TOTAL} ] ]
    }
  );

  print $table->show();
}



#**********************************************************
#
#**********************************************************
sub equipment_test {
	my ($attr)=@_;
	
	return {};
	
	my %info = ();
  my %snmp_info = (
   DESCRIBE  => '.1.3.6.1.2.1.1.1.0',
	 SYSTEM_ID => '.1.3.6.1.2.1.1.5.0',
   PORTS     => '.1.3.6.1.2.1.2.2.1.8',
   FIRMWARE1 => '1.3.6.1.2.1.16.19.2.0',
   FIRMWARE2 => '',
   UPTIME    => '.1.3.6.1.2.1.1.3.0',
   SERIAL    => '',
   LOAD      => '',
   MEM       => '',
  );
	
	
	if ($FORM{ping}) {
	  #exec("ping -qo -c3 -t2 ".$ip,$out);
	}

	my %ports_info = ();	

  my %snmp_ports_info = (
    status => '.1.3.6.1.2.1.2.2.1.8',
    in     => '.1.3.6.1.2.1.2.2.1.10',
    out    => '.1.3.6.1.2.1.2.2.1.16',
    speed  => '.1.3.6.1.2.1.2.2.1.5',
  );
  my $message;

  if ($attr->{PORT_STATUS}) {
    my ($port, $status)=split(/:/, $attr->{PORT_STATUS});

    if (snmpset($SNMP_COMMUNITY, $snmp_ports_info{status}.'.'.$port, "integer", "$status")) {
      $message .= " Ok\n";
    }

    return 0;
  }

  if ($attr->{NAS_INFO}->{MODEL}=~/dlink/i) {
    #Dlink cable length
    #pairs_length => '1.3.6.1.4.1.171.12.58.1.1.1.8',
    #('1.3.6.1.4.1.171.12.58.1.1.1.8', '1.3.6.1.4.1.171.12.58.1.1.1.9', '1.3.6.1.4.1.171.12.58.1.1.1.10', '1.3.6.1.4.1.171.12.58.1.1.1.11')
	  $snmp_ports_info{pair_length} = '1.3.6.1.4.1.171.12.58.1.1.1.8';
	}
	
	if($attr->{PORT_INFO}) {
		foreach my $type ( split(/,\s?/, $attr->{PORT_INFO}) ) {
			next if (! $snmp_ports_info{$type});
			
		  my @ports_info = &snmpwalk("$attr->{SNMP_COMMUNITY}", $snmp_ports_info{$type});

		  if ($SNMP_Session::errmsg) {
		    last;
		  }

		  foreach my $port (@ports_info) {
			  my ($port_id, $data)=split(/:/, $port);
			  $ports_info{$port_id}{$type}=$data;
  	  }
  	}
	}

  if($FORM{get_info}) {
    my %result_hash = ();
    foreach my $key ( keys %snmp_info) {
      my $snmp_oid = $snmp_info{$key};
      if ($snmp_oid) {
        my $res = snmpget($attr->{SNMP_COMMUNITY}, "$snmp_oid");
        if ($res) {
    	    $result_hash{$key}=$res;
    	  }
    	}
    }

    my $table = $html->table(
      {
        caption    => "$_INFO",
        title      => [ 'ID', $_VALUE ],
        ID         => 'EQUIPMENT_INFO'
      }
    );

    foreach my $key ( keys %result_hash) {
    	my $value = $result_hash{$key};
    	$table->addrow($key, $value);
    }
    
    print $table->show();
	}
	
	
	return \%ports_info;
}


#**********************************************************
#
#**********************************************************
sub equipment_ports {

  my @ports_state = ('', $_ACTIV, $_DISABLE);
  my @ports_state_color = ('', '#008000', '#FF0000');

  if ($FORM{add}) {
    $Equipment->port_add({%FORM});

    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_ADDED");
    }
  }
  elsif ($FORM{change}) {
    $Equipment->port_change({%FORM});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGED");
      
      equipment_test({ SNMP_COMMUNITY => "$Nas->{NAS_MNG_PASSWORD}\@". (($Nas->{NAS_MNG_IP_PORT}) ? $Nas->{NAS_MNG_IP_PORT} : $Nas->{NAS_IP}),
      	  PORT_STATUS => "$Equipment->{PORT}:$Equipment->{STATUS}"  });
    }
  }
  elsif ($FORM{PORT}) {
    $Equipment->port_info($FORM{chg});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_CHANGING");
      $Equipment->{ACTION}     = 'change';
      $Equipment->{ACTION_LNG} = $_CHANGE;
    }
  }
  elsif (defined($FORM{del}) && defined($FORM{is_js_confirmed})) {
    $Equipment->port_del($FORM{del});
    if (!$Equipment->{errno}) {
      $html->message('info', $_INFO, "$_DELETED");
    }
  }

  if ($Equipment->{errno}) {
  	if ($Equipment->{errno}) {
  		$html->message('info', $_INFO, "$_ADD $_PORT: $FORM{PORT}");
    }
    else {
      $html->message('err', $_ERROR, "[$Equipment->{errno}] $err_strs{$Equipment->{errno}}");
    }
  }

  $FORM{visual} = 2 if (! $FORM{visual} && ! $FORM{PORT} );

  my %ports_visualisation = (0 => "$_SHORT",
                             #1 => "$_USERS",
                             2 => "$_FULL",
                             3 => "ARP $_TABLE",
                             4 => "FDB $_TABLE",
                             5 => "SNMP $_INFO", 
                             # 4 => "$_CHANGE" 
                            );  

  foreach my $key (sort keys %ports_visualisation) {
  	my $value = $ports_visualisation{$key};
  	if (defined($FORM{visual}) && $FORM{visual} eq $key) {
      print $html->b($value);
    }
  	else {
  	  print $html->button("$value", "index=". (($key == 5) ? get_function_index('snmp_info_form') : $index) ."&visual=$key&NAS_ID=$FORM{NAS_ID}", { BUTTON => 1 }).' ';
  	}
  }

  my $ports      = $Equipment->{PORTS};

  #Get users from dhcp
  if (! $used_ports ) {
    $used_ports = equipments_get_used_ports({ NAS_ID => $FORM{NAS_ID} });
  }

  if ($FORM{visual} == 0 && ! $FORM{PORT}) {
    $table = $html->table(
     { 
       width       => '500',
       caption     => "$_PORTS",
       rowcolor    => 'odd',
       class       => 'form'
     }
    );
  
    my @cols = ();
    for($i=1; $i<=$ports; $i++) {
    	if ($#cols>6) {
    		$table->addtd(@cols);
    		@cols=();
    	}

      my $tdcolor = 'white';
      my $ui      = '';

      if ($used_ports->{$i}) {
      	$tdcolor = '#00FF00';
      	foreach my $uinfo (@{ $used_ports->{$i} }) {
      		my ($uid, $login)=split(/:/, $uinfo);
      	  $ui .= user_ext_menu($uid, $login, { SHOW_LOGIN => 1 });
      	}
      }

      if ($FORM{SELECT}) {
        push(@cols, $table->td( $html->b($i) . ((!$used_ports->{$i}) ? $html->form_input('PORT_ID', "$i", { TYPE=>'radio' }) : '')  , 
        { align => 'center', bgcolor => $tdcolor  }));
      }
      else {
        push(@cols, $table->td($html->button($i, "index=$index&NAS_ID=$FORM{NAS_ID}&PORT_ID=$i", { BUTTON => 1 }) .$html->br(). $ui, 
        { align => 'center', bgcolor => $tdcolor  }));
      }
    }

    $table->addtd(@cols);
    print $table->show();
  }
  elsif ($FORM{visual} == 2) {

  	my $ports_snmp= equipment_test({ SNMP_COMMUNITY => "$Nas->{NAS_MNG_PASSWORD}\@". (($Nas->{NAS_MNG_IP_PORT}) ? $Nas->{NAS_MNG_IP_PORT} : $Nas->{NAS_IP}),
  	PORT_INFO => 'status,in,out,speed,pair_length',
  	%$attr
  	 });

    my $list  = $Dhcphosts->hosts_list({
    	                                  LOGIN        => '_SHOW',
    	                                  PORTS        => '_SHOW',
    	                                  MAC          => '_SHOW',
    	                                  IP           => '_SHOW',
    	                                  ADDRESS_FULL => '_SHOW',
    	                                  UID          => '_SHOW',
    	                                  DEPOSIT      => '_SHOW',
    	                                  NAS_ID       => $FORM{NAS_ID},
     	                                  %LIST_PARAMS, 
     	                                  PAGE_ROWS    => 100,
    	                                  COLS_NAME    => 1 
    	                                });

    my %ports_dhcp_info = ();
    foreach my $line (@$list) {
    	$ports_dhcp_info{$line->{ports}}=$line
    }

    my $list  = $Equipment->port_list({
    	                                 NAS_ID       => $FORM{NAS_ID},
    	                                 TP_NAME      => '_SHOW',
     	                                 %LIST_PARAMS, 
     	                                 PAGE_ROWS    => 100,
    	                                 COLS_NAME    => 1 
    	                                });

    if ($Equipment->{errno}) {
      $html->message('err', $_ERROR, "[$Equipment->{errno}] $err_strs{$Equipment->{errno}}");
    }

    my %ports_db_info = ();
    foreach my $line (@$list) {
    	$ports_db_info{$line->{port}}=$line
    }
    
    my $table = $html->table(
      {
        width      => '100%',
        caption    => "$_EQUIPMENT",
        border     => 1,
        title      => [ $_PORT, "$_STATUS", 'UP', "UPLINK", "$_USER", "MAC", "IP", "$_ADDRESS", "$_DEPOSIT", "$_TARIF_PLAN", "$_DESCRIBE", $_TRAFFIC, '-', '-' ],
        cols_align => [ 'left', 'left', 'left', 'left', 'center:noprint', 'center:noprint' ],
        qs         => $pages_qs,
        pages      => $Equipment->{TOTAL},
        ID         => 'EQUIPMENT_MODELS'
      }
    );

    for(my $port=1; $port <= $Equipment->{PORTS}; $port++) {
    	$ports_snmp->{$port}{status}=1;
      my $delete = $html->button($_DEL, "index=$index&PORT=$port&del=$ports_db_info{$port}->{id}&NAS_ID=$FORM{NAS_ID}", { MESSAGE => "$_DEL $_PORT: $port?", CLASS => 'del' });
      my $change = $html->button($_INFO, "index=$index&PORT=$port&chg=$ports_db_info{$port}->{id}&NAS_ID=$FORM{NAS_ID}", { CLASS => 'show' });

      $table->addrow($port, 
      (defined($ports_db_info{$port}->{status})) ? $html->color_mark($ports_state[$ports_db_info{$port}->{status}+1], $ports_state_color[$ports_db_info{$port}->{status}+1]) : '', 
      ($ports_snmp->{$port}{status}) ? $html->button($html->color_mark($ports_state[$ports_snmp->{$port}{status}], $ports_state_color[$ports_snmp->{$port}{status}]), "index=$index&change=1&ID=$ports_db_info{$port}->{id}&PORT=$port&STATUS=". (($ports_snmp->{$port}{status}) ? 1 : 0) ."&NAS_ID=$FORM{NAS_ID}", { TITLE => (($ports_snmp->{$port}{status}) ? "$_HANGUP" : "$_ACTIVE" )  } )  : '' .
      (($ports_snmp->{$port}{speed} && $ports_snmp->{$port}{speed} > 0) ? $html->br() . $ports_snmp->{$port}{speed}/1000 . 'Mb/s' : '').
      (($ports_snmp->{$port}{pair_length}) ? $html->br().$ports_snmp->{$port}{pair_length} : '' ), 
      ($ports_db_info{$port}->{uplink})? $html->button($ports_db_info{$port}->{uplink}, "index=$index&NAS_ID=$ports_db_info{$port}->{uplink}") : '', 
      $html->button($ports_dhcp_info{$port}->{login}, "index=11&UID=$ports_dhcp_info{$port}->{uid}"),
      $ports_dhcp_info{$port}->{mac}, 
      $ports_dhcp_info{$port}->{ip}, 
      $ports_dhcp_info{$port}->{address_full},
      $ports_dhcp_info{$port}->{deposit},
      $ports_db_info{$port}->{tp_name},
      $ports_db_info{$port}->{comments},
      "in: ". int2byte($ports_snmp->{$port}{in}). 
        $html->br().
      "out: ".  int2byte($ports_snmp->{$port}{out}),
      $change, 
      $delete
      );
    }

    print $table->show();
  }
  elsif ($FORM{visual} == 3) {
  	equipment_snmp_info({ ARP =>1 });
  }
  else {
    $Equipment->{TYPE_SEL} = $html->form_select(
      'TYPE_ID',
      {
        SELECTED       => $Equipment->{TYPE_ID},
        SEL_LIST       => [{id => 0, name => $_USER}, 
                           {id => 1, name => 'UPLINK' }
                          ],
        NO_ID          => 1,
      }
    );

    $Equipment->{STATUS_SEL} = $html->form_select('STATUS',
      {
        SELECTED => $FORM{STATUS} || 0,
        SEL_HASH => {
          0  => $_ENABLE,
          1  => $_DISABLE,
          2  => $_NOT_ACTIVE,
          3  => $_ERROR,
        },
        NO_ID => 1,
        STYLE => \@service_status_colors,
      }
    );

    $Equipment->{UPLINK_SEL} = $html->form_select(
          'UPLINK',
          {
            SELECTED   => $FORM{UPLINK} || '',
            SEL_LIST   => $Nas->list({ %LIST_PARAMS, NAS_ID => undef, COLS_NAME => 1 }),
            SEL_KEY    => 'nas_id',
            SEL_VALUE  => 'nas_name',
            SEL_OPTIONS=> { '' => '' },
          }
        );


    $html->tpl_show(_include('equipment_port', 'Equipment'), { %$Equipment, %FORM });
  }

  return 0;
}

#**********************************************************
#
#**********************************************************
sub snmp_hash {
  my ($h_ref, $host, $name, $oid, $inst, $value) = @_;
  $inst =~ s/^\.+//;

  my %ipNetToMediaType = (
    1 => 'other',
    2 => 'invalid',
    3 => 'dynamic',
    4 => 'static'
  );

  if ($name =~ /ifPhysAddress/ || $name =~ /ipNetToMediaPhysAddress/) {
    my $mac = '';
    map { $mac .= sprintf("%02X:", $_) } unpack "CCCCCC", $value;
    $value = $mac;
  }
  elsif ($name =~ /ipNetToMediaType/) {
    $value = $ipNetToMediaType{$value};
  }

  $h_ref->{$name}->{$inst} = $value;
}

#**********************************************************
#
#**********************************************************
sub equipment_snmp_info {
	my ($attr)=@_;
	
	my $oid = '';
	
	if ($attr->{ARP}) {
		$oid = '1.3.6.1.2.1.4.22';
	}

  my %result  = &snmpwalkhash("$SNMP_COMMUNITY", \&snmp_hash, $oid);
  my @CAPTION = keys %result;
  my @RES_ARR = sort { $a <=> $b } keys %{ $result{"$CAPTION[0]"} };

  if ($SNMP_Session::errmsg) {
    print $html->message('err', $_ERROR, "$FORM{TYPE}" . $html->br() . "$SNMP_Session::suppress_warnings / $SNMP_Session::errmsg");
  }


  my $table = $html->table(
        {
          width      => '100%',
          caption    => "$_RESULT: $SNMP_COMMUNITY",
          border     => 1,
          title      => [ 'MIB', 'OID Name', "inst", "$_VALUE", "ACCESS", "$_DESCRIBE" ],
          cols_align => [ 'left', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'center' ],
          ID         => 'EQUIPMENT_SNMP_INFO',
        }
  );

  $rows_count=0;
  foreach my $oid (keys %result) {
    foreach my $inst (sort { $a <=> $b } keys %{ $result{$oid} }) {
      $table->addrow(
        "$OIDS_EXINFO{$oid}{MIB}", "$oid", "$inst",
        $result{$oid}{$inst},
        ($OIDS_EXINFO{$oid}{ACCESS} eq 'read-write') ? $html->button($_CHANGE, "index=$index&change=y&SNMP_INDEX=$inst&SNMP_OID=$OIDS_HASH{$oid}$page_qs", { BUTTON => 1 }) : $OIDS_EXINFO{$oid}{ACCESS},
        $OIDS_EXINFO{$oid}{DESCRIBE}
      );
    }
    $rows_count++;
  }
	
	print $table->show();
	
  $table = $html->table(
      {
        width      => '100%',
        cols_align => [ 'right', 'right' ],
        rowcolor   => $_COLORS[0],
        rows       => [ [ "$_TOTAL:", $html->b($rows_count) ] ]
      }
    );
  print $table->show();

}

#**********************************************************
#
#**********************************************************
sub equipments_get_used_ports {
	my ($attr) = @_;

  my %used_ports = ();

  if (in_array('Dhcphosts', \@MODULES)) {
    my $list = $Dhcphosts->hosts_list({ NAS_ID    => $attr->{NAS_ID},
      	                                PORTS     => '_SHOW',
      	                                LOGIN     => '_SHOW',
      	                                COLS_NAME => 1,
      	                                PAGE_ROWS => 10000
      	                              });

    foreach my $line (@$list) {
    	push @{ $used_ports{$line->{ports}} }, "$line->{uid}:$line->{login}";
    }
  }    

	return \%used_ports;
}

1

